{"version":3,"sources":["logo.svg","utilities.js","SortControls.js","SortDisplay.js","SortSelect.js","SortVisualizer.js","App.js","sorts/quicksort.js","sorts/mergesort.js","sorts/heapsort.js","sorts/insertionsort.js","sorts/selectionsort.js","sorts/bubblesort.js","reportWebVitals.js","index.js"],"names":["color1","color2","color3","color4","color5","copyArray","arr","Array","isArray","newArr","k","length","push","colorIndex","ind","color","colorRange","start","end","Controls","props","startingValues","seedArrayToCustomValues","seedArray","state","speedModifier","customValues","handleSpeedSliderChange","bind","handleCustomValuesChange","event","target","value","this","changeAnimationSpeed","Math","pow","baseAnimationSpeed","setState","frameIndex","pause","changeFrame","substring","array","randomizedArray","slice","randInd","floor","random","toString","maxFrameIndex","padStart","className","type","min","max","onChange","pauseAndChangeFrame","onClick","randomizeArray","changeseedArray","FastRewind","SkipPrevious","isPaused","PlayArrow","Pause","SkipNext","FastForward","maxVal","minVal","maxLength","React","Component","ValueCustomizer","handleCustomValuesSubmission","validCustomValueSubmission","match","map","parseInt","utils","regex","values","preventDefault","validateCustomValues","customValuesToseedArray","validCriteriaMessage","onSubmit","rows","cols","Display","canvas","canvasRef","current","ctx","getContext","frame","barWidth","barSpacing","xOffset","width","yOffset","fontSize","magnitudeMultiplier","clearRect","height","val","fillStyle","fillRect","font","fillText","text","currentLegend","legend","startY","startX","paintFrame","paintLegend","ref","AlgorithmSelect","currentAlgorithmName","currentAlgorithm","algorithmOptions","algorithmName","algorithm","classes","changeAlgorithm","runAlgorithm","Visualizer","frames","description","generateseedArray","arrayLength","minimum","maximum","defaultAlgorithm","defaultAlgorithmRunner","animationSpeed","createRef","animationInterval","algorithmRunner","clearInterval","shouldPause","setInterval","speed","currentFrame","originalArray","workingArray","quicksort","midpoint","pval","pivot","j","partition","href","mergesort","kval","jval","heap_size","insertIntoHeap","pop_from_heap","ival","parent","c1val","child1","c2val","child2","pop","m","minval","run","swaps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","active","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,I,6GCATA,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UAKR,SAASC,EAAUC,GACtB,GAAIC,MAAMC,QAAQF,GAEX,CAEH,IADA,IAAIG,EAAS,GACLC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC3BD,EAAOG,KAAKP,EAAUC,EAAII,KAE9B,OAAOD,EANP,OAAOH,EAUR,SAASO,EAAWP,EAAKQ,EAAKC,GACjCT,EAAIQ,GAAO,CAACR,EAAIQ,GAAK,GAAIC,GAGtB,SAASC,EAAWV,EAAKW,EAAOC,EAAKH,GACxC,IAAI,IAAIL,EAAIO,EAAOP,GAAKQ,EAAKR,IACzBG,EAAWP,EAAKI,EAAGK,G,WCXrBI,E,kDACJ,WAAYC,GAAQ,IAAD,sBAEjB,IAAIC,GADJ,cAAMD,IACoBE,wBACxB,EAAKF,MAAMG,WAHI,OAKjB,EAAKC,MAAQ,CACXC,cAAe,EACfC,aAAcL,GAEhB,EAAKM,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAC/B,EAAKC,yBAA2B,EAAKA,yBAAyBD,KAA9B,gBAVf,E,2DAanB,SAAwBE,GACtB,IAAIL,EAAgBK,EAAMC,OAAOC,MACjCC,KAAKb,MAAMc,qBACTC,KAAKC,IAAI,GAAKX,EAAgB,IAAOQ,KAAKb,MAAMiB,oBAElDJ,KAAKK,SAAS,CAAEb,cAAeA,M,iCAEjC,SAAoBc,GAClBN,KAAKb,MAAMoB,OAAM,GACjBP,KAAKb,MAAMqB,YAAYF,K,qCAGzB,SAAwBjC,GAEtB,IADA,IAAIoB,EAAe,GACVhB,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC9BgB,GAAgBpB,EAAII,GAAG,GAAK,KAK9B,OAHIgB,IACFA,EAAeA,EAAagB,UAAU,EAAGhB,EAAaf,OAAS,IAE1De,I,sCAGT,SAAyBI,GACvB,IAAIJ,EAAeI,EAAMC,OAAOC,MAChCC,KAAKK,SAAS,CAAEZ,aAAcA,M,4BAGhC,SAAeiB,GAEb,IADA,IAAIC,EAAkBD,EAAME,QACnBnC,EAAI,EAAGA,EAAIkC,EAAgBjC,OAAQD,IAAK,CAC/C,IAAIoC,EAAUX,KAAKY,MACjBZ,KAAKa,UAAYJ,EAAgBjC,OAASD,GAAKA,GAFF,EAIE,CAC/CkC,EAAgBE,GAChBF,EAAgBlC,IAFjBkC,EAAgBlC,GAJ8B,KAI1BkC,EAAgBE,GAJU,KASjD,OAAOF,I,oBAGT,WAAU,IAAD,OACHL,GAAcN,KAAKb,MAAMmB,WAAa,GAAGU,WACzCC,GAAiBjB,KAAKb,MAAM8B,cAAgB,GAAGD,WAEnD,OADAV,EAAaA,EAAWY,SAASD,EAAcvC,OAAQ,KAErD,gCACE,gCACE,8BACE,sBAAKyC,UAAU,iBAAf,UACE,8BACE,sBAAMA,UAAU,qBAAhB,SACG,UAAYb,EAAa,IAAMW,MAGpC,uBACEE,UAAU,eACVC,KAAK,QACLC,IAAK,EACLC,IAAKtB,KAAKb,MAAM8B,cAChBlB,MAAOC,KAAKb,MAAMmB,WAClBiB,SAAU,SAAC1B,GAAD,OACR,EAAK2B,oBAAoB3B,EAAMC,OAAOC,eAK9C,sBAAKoB,UAAU,eAAf,UACE,wBACEA,UAAU,uBACVM,QAAS,WACP,IAAId,EAAkB,EAAKe,eACzB,EAAKvC,MAAMG,WAEb,EAAKH,MAAMwC,gBAAgBhB,GAC3B,EAAKN,SAAS,CACZZ,aAAc,EAAKJ,wBACjBsB,MATR,6BAgBA,sBAAKQ,UAAU,gBAAf,UACE,wBACEA,UAAU,uBACVM,QAAS,SAAC5B,GAAD,OAAW,EAAK2B,oBAAoB,IAF/C,SAIE,cAACI,EAAA,EAAD,MAEF,wBACET,UAAU,uBACVM,QAAS,SAAC5B,GAAD,OACP,EAAK2B,oBAAoB,EAAKrC,MAAMmB,WAAa,IAHrD,SAME,cAACuB,EAAA,EAAD,MAEF,wBACEV,UAAU,uBACVM,QAAS,SAAC5B,GAAD,OAAW,EAAKV,MAAMoB,OAAO,EAAKpB,MAAM2C,WAFnD,SAIG9B,KAAKb,MAAM2C,SAAW,cAACC,EAAA,EAAD,IAAgB,cAACC,EAAA,EAAD,MAEzC,wBACEb,UAAU,uBACVM,QAAS,SAAC5B,GAAD,OACP,EAAK2B,oBAAoB,EAAKrC,MAAMmB,WAAa,IAHrD,SAME,cAAC2B,EAAA,EAAD,MAEF,wBACEd,UAAU,uBACVM,QAAS,SAAC5B,GAAD,OACP,EAAK2B,oBAAoB,EAAKrC,MAAM8B,gBAHxC,SAME,cAACiB,EAAA,EAAD,SAGJ,+BACE,wBAAOf,UAAU,QAAjB,UACE,sBAAMA,UAAU,cAAhB,oBACA,uBACEA,UAAU,eACVC,KAAK,QACLC,KAAM,GACNC,IAAK,GACLvB,MAAOC,KAAKT,MAAMC,cAClB+B,SAAUvB,KAAKN,qCAMzB,cAAC,EAAD,CACED,aAAcO,KAAKT,MAAME,aACzBG,yBAA0BI,KAAKJ,yBAC/B+B,gBAAiB3B,KAAKb,MAAMwC,gBAC5BQ,OAAQnC,KAAKb,MAAMgD,OACnBC,OAAQpC,KAAKb,MAAMiD,OACnBC,UAAWrC,KAAKb,MAAMkD,mB,GA9JTC,IAAMC,WAqKvBC,E,kDACJ,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDsD,6BAA+B,EAAKA,6BAA6B9C,KAAlC,gBAIpC,EAAKJ,MAAQ,CACXmD,4BAA4B,GAPb,E,2DAWnB,SAAwBjD,GACtB,IAAKA,EACH,MAAO,GAGT,OAAOA,EACJkD,MAFW,WAGXC,KAAI,SAAC7C,GAAD,MAAW,CAAC8C,SAAS9C,GAAQ+C,Q,kCAGtC,SAAqBrD,GACnB,IAAIsD,EAAQ,qCACZ,GAAiC,MAA7BtD,EAAakD,MAAMI,GACrB,OAAO,EAETA,EAAQ,UACR,IAAIC,EAASvD,EAAakD,MAAMI,GAAOH,KAAI,SAAC7C,GAAD,OAAW8C,SAAS9C,MAC/D,QACEG,KAAKoB,IAAL,MAAApB,KAAI,YAAQ8C,IAAU,KACtB9C,KAAKmB,IAAL,MAAAnB,KAAI,YAAQ8C,IAAU,GACtBA,EAAOtE,QAAUsB,KAAKb,MAAMkD,a,0CAOhC,SAA6BxC,GAC3B,IAAIJ,EAAeO,KAAKb,MAAMM,aAC9BI,EAAMoD,iBACFjD,KAAKkD,qBAAqBzD,IAC5BO,KAAKb,MAAMwC,gBACT3B,KAAKmD,wBAAwB1D,IAE/BO,KAAKK,SAAS,CAAEqC,4BAA4B,KAE5C1C,KAAKK,SAAS,CAAEqC,4BAA4B,M,oBAIhD,WACE,IAAIU,EACF,uBACEjC,UACEnB,KAAKT,MAAMmD,2BACP,GACA,kCAJR,UAOG,2DACC1C,KAAKb,MAAMiD,OACX,kBACApC,KAAKb,MAAMgD,OACX,IACF,uBACC,mDACCnC,KAAKb,MAAMkD,UACX,cAGN,OACE,gCACE,sBAAMgB,SAAUrD,KAAKyC,6BAArB,SACE,wBAAOtB,UAAU,gCAAjB,UACE,0BACEmC,KAAK,IACLC,KAAK,MACLhC,SAAUvB,KAAKb,MAAMS,yBACrBG,MAAOC,KAAKb,MAAMM,eAEpB,uBACE0B,UAAU,uBACVC,KAAK,SACLrB,MAAM,0BAIZ,8BAAMqD,W,GAzFgBd,IAAMC,WA+FrBrD,ICtLAsE,E,gKA1Fb,WACE,IAAIC,EAASzD,KAAKb,MAAMuE,UAAUC,QAC9BC,EAAMH,EAAOI,WAAW,MACxBC,EAAQ9D,KAAKb,MAAM2E,MAEnBC,EAAW/D,KAAKb,MAAM4E,SACtBC,EAAahE,KAAKb,MAAM6E,WACxBC,GACDR,EAAOS,MAAQJ,EAAMpF,QAAUqF,EAAWC,GAAcA,GAAc,EACrEG,EAAUnE,KAAKb,MAAMgF,QACrBC,EAAWpE,KAAKb,MAAMiF,SACtBC,EAAsBrE,KAAKb,MAAMkF,oBACrCT,EAAIU,UAAU,EAAG,EAAGb,EAAOS,MAAOT,EAAOc,QACzC,IAAK,IAAI9F,EAAI,EAAGA,EAAIqF,EAAMpF,OAAQD,IAAK,CACrC,IAAI+F,EAAK1F,EAD4B,cAEtBgF,EAAMrF,GAFgB,GAEpC+F,EAFoC,KAE/B1F,EAF+B,KAGrC8E,EAAIa,UAAY3F,EAChB8E,EAAIc,SACFT,GAAWF,EAAWC,GAAcvF,EACpCgF,EAAOc,OAASJ,EAChBJ,GACCS,EAAMH,GAETT,EAAIe,KAAOP,EAAW,iBACtBR,EAAIgB,SACFJ,EACAP,GAAWF,EAAWC,GAAcvF,EACpCgF,EAAOc,OAASJ,EAAUC,M,yBAMhC,WACE,IAQIS,EAAM/F,EAPN8E,EADS5D,KAAKb,MAAMuE,UAAUC,QACjBE,WAAW,MAQxBiB,EAAgB9E,KAAKb,MAAM4F,OAVnB,cAWID,EAAc,GAXlB,GAWXD,EAXW,KAWL/F,EAXK,KAYZ8E,EAAIe,KAAOP,mBACXR,EAAIa,UAAY3F,EAChB8E,EAAIgB,SAASC,EAXA,GAWcG,IAC3B,IAAK,IAAIvG,EAAI,EAAGA,EAAIqG,EAAcpG,OAAQD,IAAK,CAC7C,IAAIoG,EAAM/F,EADmC,cAE7BgG,EAAcrG,GAFe,GAE5CoG,EAF4C,KAEtC/F,EAFsC,KAG7C8E,EAAIa,UAAY3F,EAChB8E,EAAIc,SAhBO,GACA,GAiBA,GAA2BjG,EAfxB,OAmBdmF,EAAIe,KAAOP,mBACXR,EAAIgB,SACFC,EACAI,IAxBS,GAyBA,GAA2BxG,EAAI2F,O,+BAK9C,WACEpE,KAAKkF,aACLlF,KAAKmF,gB,oBAGP,WACcnF,KAAKb,MAAM2E,MAKvB,OAJI9D,KAAKb,MAAMuE,UAAUC,UACvB3D,KAAKkF,aACLlF,KAAKmF,eAGL,8BACE,wBACEjB,MAAOlE,KAAKb,MAAM+E,MAClBK,OAAQvE,KAAKb,MAAMoF,OACnBa,IAAKpF,KAAKb,MAAMuE,kB,GApFJpB,IAAMC,WC4Bb8C,MA7Bf,SAAyBlG,GACvB,IAAImG,EAD0B,cAEmBnG,EAAMoG,iBAFzB,GAG9B,OADCD,EAF6B,UAI5B,8BACE,qBAAKnE,UAAU,aAAf,SACGhC,EAAMqG,iBAAiB5C,KAAI,YAAiC,IAAD,mBAA9B6C,EAA8B,KAAfC,EAAe,KACtDC,EAAU,yCAId,OAHIL,GAAwBG,IAC1BE,GAAW,WAGX,wBAEExE,UAAWwE,EACXlE,QAAS,WACPtC,EAAMyG,gBAAgB,CAACH,EAAeC,IACtCvG,EAAM0G,gBALV,SAQGJ,GAPIA,WCgJJK,E,kDApJb,WAAY3G,GAAQ,IAAD,sBAEjB,IAUI4G,EAAQhB,EAAQiB,EAVhB1G,GADJ,cAAMH,IACe8G,kBACnB,EAAK9G,MAAM+G,YACX,EAAK/G,MAAMgH,QACX,EAAKhH,MAAMiH,SALI,cAWb,EAAKjH,MAAMkH,iBAXE,eAUfC,EAVe,MAasChH,GAbtC,0BAahByG,EAbgB,KAaRhB,EAbQ,KAaAiB,EAbA,KAcjB,EAAKzG,MAAQ,CACXD,UAAWA,EACXwC,UAAU,EACViE,OAAQA,EACRhB,OAAQA,EACRzE,WAAY,EACZiG,eAAgB,EAAKpH,MAAMiB,mBAC3BmF,iBAAkB,EAAKpG,MAAMkH,iBAC7BL,YAAaA,GAEf,EAAKtC,UAAYpB,IAAMkE,YACvB,EAAKC,kBAAoB,KACzB,EAAKZ,aAAe,EAAKA,aAAalG,KAAlB,gBACpB,EAAKY,MAAQ,EAAKA,MAAMZ,KAAX,gBACb,EAAKa,YAAc,EAAKA,YAAYb,KAAjB,gBACnB,EAAKM,qBAAuB,EAAKA,qBAAqBN,KAA1B,gBAC5B,EAAKiG,gBAAkB,EAAKA,gBAAgBjG,KAArB,gBACvB,EAAKgC,gBAAkB,EAAKA,gBAAgBhC,KAArB,gBA/BN,E,qDAiCnB,SAAkBuG,EAAaC,EAASC,GAEtC,IADA,IAAI9G,EAAY,GACPb,EAAI,EAAGA,EAAIyH,EAAazH,IAAK,CACpC,IAAIsB,EAAQG,KAAKY,MAAMZ,KAAKa,UAAYqF,EAAU,IAAMD,EACxD7G,EAAUX,KAAK,CAACoB,EAAO+C,IAEzB,OAAOxD,I,0BAGT,WAAgB,IAAD,OAEbU,KAAKK,UAAS,SAACd,GACb,IAEIwG,EAAQhB,EAAQiB,EAHG,cAEYzG,EAAMgG,iBAFlB,eAEPmB,EAFO,MAIyBnH,EAAMD,WAJ/B,mBAMvB,OAFCyG,EAJsB,KAIdhB,EAJc,KAINiB,EAJM,KAKvBW,cAAc,EAAKF,mBACZ,CACL1B,OAAQA,EACRgB,OAAQA,EACRC,YAAaA,EACb1F,WAAY,EACZwB,UAAU,Q,6BAKhB,SAAgByD,GACdvF,KAAKK,SAAS,CAAEkF,iBAAkBA,M,mBAGpC,SAAMqB,GAAc,IAAD,OAEbA,GADW5G,KAAKT,MAAMuC,WAI1B6E,cAAc3G,KAAKyG,mBACdG,IACH5G,KAAKyG,kBAAoBI,aACvB,kBAAM,EAAKrG,YAAY,EAAKjB,MAAMe,WAAa,KAC/CN,KAAKT,MAAMgH,iBAGfvG,KAAKK,SAAS,CAAEyB,SAAU8E,O,yBAG5B,SAAYtG,GACVA,EAAaJ,KAAKoB,IAChB,EACApB,KAAKmB,IAAIrB,KAAKT,MAAMwG,OAAOrH,OAAS,EAAG4B,IAEzCN,KAAKK,SAAS,CAAEC,WAAYA,M,kCAG9B,SAAqBwG,GAAQ,IAAD,OACrB9G,KAAKT,MAAMuC,WACd6E,cAAc3G,KAAKyG,mBACnBzG,KAAKyG,kBAAoBI,aACvB,kBAAM,EAAKrG,YAAY,EAAKjB,MAAMe,WAAa,KAC/CwG,IAGJ9G,KAAKK,SAAS,CAAEkG,eAAgBO,M,6BAGlC,SAAgBxH,GACdU,KAAKK,SAAS,CAAEf,UAAWA,IAC3BU,KAAK6F,iB,oBAGP,WACE,IAAIkB,EAAe/G,KAAKT,MAAMwG,OAAO/F,KAAKT,MAAMe,YAChD,OACE,gCACE,cAAC,EAAD,CACEiF,iBAAkBvF,KAAKT,MAAMgG,iBAC7BC,iBAAkBxF,KAAKb,MAAMqG,iBAC7BK,aAAc7F,KAAK6F,aACnBD,gBAAiB5F,KAAK4F,kBAExB,qBAAKzE,UAAU,cAAf,SACE,8BAAMnB,KAAKT,MAAMyG,gBAEnB,cAAC,EAAD,CACEtC,UAAW1D,KAAK0D,UAChBQ,MAAO,KACPK,OAAQ,IACRT,MAAOiD,EACPhC,OAAQ/E,KAAKT,MAAMwF,OACnBhB,SAAU,GACVC,WAAY,GACZG,QAAS,GACTC,SAAU,GACVC,oBAAqB,IAEvB,cAAC,EAAD,CACEP,MAAO9D,KAAKT,MAAMe,WAClBC,MAAOP,KAAKO,MACZuB,SAAU9B,KAAKT,MAAMuC,SACrBb,cAAejB,KAAKT,MAAMwG,OAAOrH,OAAS,EAC1C4B,WAAYN,KAAKT,MAAMe,WACvBE,YAAaR,KAAKQ,YAClBJ,mBAAoBJ,KAAKb,MAAMiB,mBAC/BH,qBAAsBD,KAAKC,qBAC3BX,UAAWU,KAAKT,MAAMD,UACtBqC,gBAAiB3B,KAAK2B,gBACtBQ,OAAQnC,KAAKb,MAAMiH,QACnBhE,OAAQpC,KAAKb,MAAMgH,QACnB9D,UAAWrC,KAAKb,MAAMkD,mB,GA9IPC,IAAMC,WCG/B,IAAMiD,EAAmB,CACvB,CAAC,YCZI,SAAsBwB,GACzB,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBkE,IAwD9B,OAvDA,SAASE,EAAUlI,EAAOC,GACtB,KAAID,GAASC,GAAb,CAGA,IAAIkI,EAKR,SAAmBnI,EAAOC,GACtB,IACImI,EADAC,EAAQpI,EADe,cAGNgI,EAAaI,GAHP,GAG1BD,EAH0B,oBAI3BtE,EAAiBmE,EAAcjI,EAAOC,EAAK6D,GAC3CiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BnE,EAAiBmE,EAAcI,EAAOvE,GACtCiD,EAAOpH,KAAKmE,EAAgBmE,IAE5B,IADA,IAAIK,EAAItI,EACCP,EAAIO,EAAOP,EAAIQ,EAAKR,IAAK,CAC9B,IAAI+F,EAD0B,cAEbyC,EAAaxI,GAFA,GAG9B,GADC+F,EAF6B,oBAG1BA,EAAM4C,EAAM,CAAC,IAAD,EACyB,CACjCH,EAAaxI,GACbwI,EAAaK,IAFhBL,EAAaK,GADF,KACML,EAAaxI,GADnB,KAKZ6I,GAAK,EAETxE,EAAiBmE,EAAcjI,EAAOsI,EAAI,EAAGxE,GAC7CA,EAAiBmE,EAAcK,EAAG7I,EAAGqE,GACrCiD,EAAOpH,KAAKmE,EAAgBmE,IArBL,MAuBc,CACrCA,EAAaI,GACbJ,EAAaK,IAIjB,OANCL,EAAaK,GAvBa,KAuBTL,EAAaI,GAvBJ,KA2B3BtB,EAAOpH,KAAKmE,EAAgBmE,IAC5BnE,EAAiBmE,EAAcjI,EAAOC,EAAK6D,GACpCwE,EAlCQC,CAAUvI,EAAOC,GAChCiI,EAAUlI,EAAOmI,EAAW,GAC5BD,EAAUC,EAAW,EAAGlI,IAkC5BiI,CAAU,EAAGD,EAAavI,OAAS,GACnCqH,EAAOpH,KAAKsI,GAcL,CAAClB,EAbK,CACT,CAAC,mBAAoBjD,GACrB,CAAC,kCAAmCA,GACpC,CAAC,QAASA,GACV,CAAC,wCAAyCA,GAC1C,CAAC,uDAAwDA,IAGzD,iCACI,0CADJ,sFAE2B,uBAAM,mBAAG0E,KAAK,0CAAR,iED1CvC,CAAC,YEbI,SAAsBR,GACzB,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBmE,IAuD9B,OAtDA,SAASQ,EAAUzI,EAAOC,GACtB,GAAID,GAASC,EACT,OAAOgI,EAAajI,GAEpB,IAAImI,EAAWjH,KAAKY,OAAO9B,EAAQC,GAAO,GAC1CwI,EAAUzI,EAAOmI,GACjBM,EAAUN,EAAW,EAAGlI,GACxB6D,EAAiBmE,EAAcjI,EAAOmI,EAAUrE,GAChDA,EAAiBmE,EAAcE,EAAW,EAAGlI,EAAK6D,GAClDiD,EAAOpH,KAAKmE,EAAgBmE,IAI5B,IAHA,IAAI5I,EAAM,GACNI,EAAIO,EACJsI,EAAIH,EAAW,EACZ1I,GAAK0I,GAAYG,GAAKrI,GAAI,CAC7B,IAAIyI,EAEAC,EAHyB,cAERV,EAAaxI,GAFL,GAE5BiJ,EAF4B,sCAIRT,EAAaK,GAJL,GAI5BK,EAJ4B,oBAK1BD,GAAQC,GACPtJ,EAAIM,KAAKsI,EAAaxI,IACtBA,GAAK,IAELJ,EAAIM,KAAKsI,EAAaK,IACtBA,GAAK,GAGb,KAAO7I,GAAK0I,GACR9I,EAAIM,KAAKsI,EAAaxI,IACtBA,GAAK,EAET,KAAO6I,GAAKrI,GACRZ,EAAIM,KAAKsI,EAAaK,IACtBA,GAAK,EAGT,IADIA,EAAI,EACC7I,EAAIO,EAAOP,GAAKQ,EAAKR,IAC1BwI,EAAaxI,GAAKJ,EAAIiJ,GACtBxE,EAAiBmE,EAAcxI,EAAGqE,GAClCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BK,GAAK,EAETxE,EAAiBmE,EAAcjI,EAAOC,EAAK6D,GAC3CiD,EAAOpH,KAAKmE,EAAgBmE,IAGpCQ,CAAU,EAAGR,EAAavI,OAAS,GAS5B,CAACqH,EADK,CAAC,CAAC,mBAAoBjD,GAAe,CAAC,0BAA2BA,GAAe,CAAC,2BAA4BA,GAAe,CAAC,4BAA6BA,IANnK,iCACI,0CADJ,2GAGI,uBAAM,mBAAG0E,KAAK,2CAAR,iEFvChB,CAAC,WGdI,SAAqBR,GAIxB,IAHA,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBkE,IAC1BY,EAAY,EACRnJ,EAAI,EAAGA,EAAIuI,EAActI,OAAQD,IACrCoJ,IACA9B,EAAOpH,KAAKmE,EAAgBmE,IAEhC,IAAQxI,EAAIwI,EAAavI,OAAS,EAAGD,GAAK,EAAGA,IACzCqJ,IAGJ,SAASD,IACL,IAIIE,EAJAlJ,EAAM+I,EACV9E,EAAiBmE,EAAcpI,EAAKiE,GACpCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BnE,EAAiBmE,EAAcpI,EAAKiE,GAJf,kBAMAmE,EAAapI,GANb,GAMpBkJ,EANoB,oBAOrB,IACIX,EADAY,EAAS9H,KAAKY,OAAOjC,EAAM,GAAK,GAEpC,GAAGmJ,GAAU,EAAE,CAAC,IAAD,cACUf,EAAae,GADvB,GACVZ,EADU,oBAGf,KAAMY,EAAS,GAAKD,EAAOX,GAAK,CAC5BtE,EAAiBmE,EAAcpI,EAAKiE,GACpCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BnE,EAAiBmE,EAAcpI,EAAKiE,GAHR,MAIgB,CAACmE,EAAae,GAASf,EAAapI,IAA/EoI,EAAapI,GAJc,KAIRoI,EAAae,GAJL,KAK5BnJ,EAAMmJ,EACNA,EAAS9H,KAAKY,OAAOjC,EAAM,GAAK,GANJ,kBAOPoI,EAAae,GAPN,GAO3BZ,EAP2B,sCAQPH,EAAapI,GARN,GAQ3BkJ,EAR2B,oBAUhC,GAAIA,EAAOX,EAAK,CAAC,IAAD,EACgC,CAACH,EAAae,GAASf,EAAapI,IAA/EoI,EAAapI,GADF,KACQoI,EAAae,GADrB,KAGhBJ,GAAa,EAGjB,SAASE,IAAgB,IAAD,EAC6B,CAACb,EAAaW,EAAY,GAAIX,EAAa,IAA3FA,EAAa,GADM,KACFA,EAAaW,EAAY,GADvB,KAEpB9E,EAAiBmE,EAAcW,EAAY,EAAG9E,GAC9CA,EAAiBmE,EAAc,EAAGnE,GAClCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BW,GAAa,EACb,IACIG,EADAlJ,EAAM,EANU,cAQCoI,EAAapI,GARd,GAQnBkJ,EARmB,oBASpB,IACIE,EADAC,EAAe,EAANrJ,EAAU,EAEvB,GAAIqJ,EAASN,EAAU,CAAC,IAAD,cACMX,EAAaiB,GADnB,GAClBD,EADkB,oBAGvB,IACIE,EADAC,EAAe,EAANvJ,EAAU,EAEvB,GAAIuJ,EAASR,EAAU,CAAC,IAAD,cACMX,EAAamB,GADnB,GAClBD,EADkB,oBAGvB,KAAMD,EAASN,GAAaQ,EAASR,IAAeG,EAAOE,GAASF,EAAOI,IAAO,CAC9E,GAAIF,EAAQE,EAAM,CAAC,IAAD,EAC8B,CAAClB,EAAapI,GAAMoI,EAAaiB,IAA5EjB,EAAaiB,GADA,KACSjB,EAAapI,GADtB,KAEdA,EAAMqJ,MACH,CAAC,IAAD,EACyC,CAACjB,EAAapI,GAAMoI,EAAamB,IAA5EnB,EAAamB,GADX,KACoBnB,EAAapI,GADjC,KAEHA,EAAMuJ,EAIV,GAFArC,EAAOpH,KAAKmE,EAAgBmE,KAC5BiB,EAAe,EAANrJ,EAAU,GACN+I,EAAU,CAAC,IAAD,cACMX,EAAaiB,GADnB,GAClBD,EADkB,oBAIvB,IADAG,EAAe,EAANvJ,EAAU,GACN+I,EAAU,CAAC,IAAD,cACMX,EAAamB,GADnB,GAClBD,EADkB,qBAI3B,GAAIC,EAASR,GAAaG,EAAOI,EAAM,CAAC,IAAD,EACS,CAAClB,EAAapI,GAAMoI,EAAamB,IAA5EnB,EAAamB,GADqB,KACZnB,EAAapI,GADD,UAEhC,GAAGqJ,EAASN,GAAaG,EAAOE,EAAM,CAAC,IAAD,EACG,CAAChB,EAAapI,GAAMoI,EAAaiB,IAA5EjB,EAAaiB,GAD2B,KAClBjB,EAAapI,GADK,KAG7CiE,EAAiBmE,EAAcpI,EAAKiE,GACpCiD,EAAOpH,KAAKmE,EAAgBmE,IAYhC,OAVAnE,EAAiBmE,EAAc,EAAGA,EAAavI,OAAS,EAAGoE,GAC3DiD,EAAOpH,KAAKmE,EAAgBmE,IASrB,CAAClB,EADK,CAAC,CAAC,kBAAmBjD,GAAe,CAAC,oBAAqBA,GAAe,CAAC,uBAAwBA,GAAe,CAAC,kBAAmBA,IAN9I,iCACI,yCADJ,4EAGI,uBAAM,mBAAG0E,KAAK,yCAAR,gEH5EhB,CAAC,iBIfI,SAA0BR,GAG7B,IAFA,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBmE,IACrBxI,EAAI,EAAGA,EAAIwI,EAAavI,OAAQD,IAAK,CAE1C,IAAIiJ,EADJ5E,EAAiBmE,EAAcxI,EAAGqE,GADQ,IAItC6E,EAJsC,cAGrBV,EAAaxI,GAHQ,GAGzCiJ,EAHyC,oBAK1C,IAAK,IAAIJ,EAAI,EAAGA,EAAI7I,EAAG6I,IAAK,CAAC,IAAD,cACHL,EAAaK,GADV,GAIxB,GAHCK,EADuB,oBAExB7E,EAAiBmE,EAAc,EAAGK,EAAGxE,GACrCiD,EAAOpH,KAAKmE,EAAgBmE,IACxBS,EAAOC,EAAM,CACb5B,EAAOsC,MACPvF,EAAiBmE,EAAcK,EAAGxE,GAClC,IAAK,IAAIwF,EAAI7J,EAAG6J,EAAIhB,EAAGgB,IAAK,CAAC,IAAD,EACiB,CACrCrB,EAAaqB,EAAI,GACjBrB,EAAaqB,IAFhBrB,EAAaqB,GADU,KACNrB,EAAaqB,EAAI,GADX,KAKxBvC,EAAOpH,KAAKmE,EAAgBmE,IAEhC,OAGRnE,EAAiBmE,EAAc,EAAGxI,EAAGqE,GACrCiD,EAAOpH,KAAKmE,EAAgBmE,IAmBhC,OAjBAnE,EAAiBmE,EAAc,EAAGA,EAAavI,OAAS,EAAGoE,GAC3DiD,EAAOpH,KAAKmE,EAAgBmE,IAgBrB,CAAClB,EAfK,CACT,CAAC,wBAAyBjD,GAC1B,CAAC,iBAAkBA,GACnB,CAAC,6CAA8CA,GAC/C,CAAC,kBAAmBA,IAGpB,iCACI,+CADJ,mEAEuB,uBACnB,mBAAG0E,KAAK,+CAAR,sEJxBV,CAAC,iBKhBI,SAA0BR,GAG7B,IAFA,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBmE,IACrBxI,EAAI,EAAGA,EAAIwI,EAAavI,OAAQD,IAAK,CAC1C,IACI8J,EADAlH,EAAM5C,EADgC,cAGnBwI,EAAa5F,GAHM,GAGzCkH,EAHyC,oBAI1CzF,EAAiBmE,EAAc5F,EAAKyB,GACpC,IAAK,IAAIwE,EAAI7I,EAAI,EAAG6I,EAAIL,EAAavI,OAAQ4I,IAAK,CAC9C,IAAIK,EAD0C,cAEzBV,EAAaK,GAFY,GAG9C,GADCK,EAF6C,oBAG1CA,EAAOY,EAAQ,CACfzF,EAAiBmE,EAAc5F,EAAKyB,GACpCzB,EAAMiG,EAFS,kBAGQL,EAAa5F,GAHrB,GAGdkH,EAHc,oBAKnBzF,EAAiBmE,EAAcK,EAAGxE,GAClCA,EAAiBmE,EAAc5F,EAAKyB,GACpCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BnE,EAAiBmE,EAAcK,EAAGxE,GAClCA,EAAiBmE,EAAc5F,EAAKyB,GAjBE,MAmBH,CACnCmE,EAAaxI,GACbwI,EAAa5F,IAFhB4F,EAAa5F,GAnB4B,KAmBtB4F,EAAaxI,GAnBS,KAuB1CqE,EAAiBmE,EAAcxI,EAAGqE,GAmBtC,OAjBAA,EAAiBmE,EAAc,EAAGA,EAAavI,OAAS,EAAGoE,GAC3DiD,EAAOpH,KAAKmE,EAAgBmE,IAgBrB,CAAClB,EAfK,CACT,CAAC,wBAAyBjD,GAC1B,CAAC,kBAAmBA,GACpB,CAAC,0CAA2CA,GAC5C,CAAC,kBAAmBA,IAGpB,iCACI,+CADJ,mEAEuB,uBACnB,mBAAG0E,KAAK,+CAAR,sELvBV,CAAC,cMjBI,SAAuBR,GAI1B,IAHA,IAAIC,EAAenE,EAAgBkE,GAC/BjB,EAAS,CAACjD,EAAgBmE,IAC1BuB,GAAM,EACHA,GAAK,CAER,IADA,IAAIC,EAAQ,EACHhK,EAAI,EAAGA,EAAIwI,EAAavI,OAAQD,IAAK,CAC1C,IAAIiJ,EAEAN,EAHsC,cAErBH,EAAaxI,GAFQ,GAEzCiJ,EAFyC,sCAIrBT,EAAaxI,EAAI,GAJI,GAQ1C,GAJC2I,EAJyC,oBAK1CtE,EAAiBmE,EAAcxI,EAAGqE,GAClCA,EAAiBmE,EAAcxI,EAAI,EAAGqE,GACtCiD,EAAOpH,KAAKmE,EAAgBmE,IACxBS,EAAON,EAAM,CAAC,IAAD,EAC4B,CACrCH,EAAaxI,EAAI,GACjBwI,EAAaxI,IAFhBwI,EAAaxI,GADD,KACKwI,EAAaxI,EAAI,GADtB,KAKbqE,EAAiBmE,EAAcxI,EAAGqE,GAClCA,EAAiBmE,EAAcxI,EAAI,EAAGqE,GACtCiD,EAAOpH,KAAKmE,EAAgBmE,IAC5BwB,GAAS,EAEb3F,EAAiBmE,EAAcxI,EAAGqE,GAClCA,EAAiBmE,EAAcxI,EAAI,EAAGqE,GAE7B,GAAT2F,IACAD,GAAM,GAmBd,OAhBA1F,EAAiBmE,EAAc,EAAGA,EAAavI,OAAS,EAAGoE,GAC3DiD,EAAOpH,KAAKmE,EAAgBmE,IAerB,CAAClB,EAdK,CACT,CAAC,oBAAqBjD,GACtB,CAAC,eAAgBA,GACjB,CAAC,gBAAiBA,IAGlB,iCACI,4CADJ,mEAEuB,uBACnB,mBAAG0E,KAAK,4CAAR,oENIGkB,MA1Bf,WACE,OACE,sBAAKvH,UAAU,MAAf,UACE,+BACE,kDAEF,cAAC,EAAD,CACE+E,YAAa,GACbC,QAAS,EACTC,QAAS,IACT/D,UAAW,GACXjC,mBAAoB,IACpBoF,iBAAkBA,EAClBa,iBAAkBb,EAAiB,KAErC,uBACA,uBACA,qBAAKrE,UAAU,oBAAf,gMO3BSwH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCQdQ,EAAQC,KAAK,CACXC,OAAQ,CAAEC,SAAU,CAAC,gBACrBC,OAVS,kBACTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,YAY5BlB,M","file":"static/js/main.2dee6b8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const color1 = \"#FF0000\";\r\nconst color2 = \"#008000\";\r\nconst color3 = \"#0000FF\";\r\nconst color4 = \"#8B4513\";\r\nconst color5 = \"#000000\";\r\nconst color6 = \"#FFFFFF\";\r\nconst color7 = \"#010101\";\r\nconst color8 = \"#800080\";\r\n\r\nexport function copyArray(arr){\r\n    if(!Array.isArray(arr)){\r\n        return arr;\r\n    } else {\r\n        let newArr = []\r\n        for(let k = 0; k < arr.length; k++){\r\n            newArr.push(copyArray(arr[k]));\r\n        }\r\n        return newArr;\r\n    }\r\n}\r\n\r\nexport function colorIndex(arr, ind, color){\r\n    arr[ind] = [arr[ind][0], color];\r\n}\r\n\r\nexport function colorRange(arr, start, end, color){\r\n    for(let k = start; k <= end; k++){\r\n        colorIndex(arr, k, color);\r\n    }\r\n}\r\n\r\nexport {color1, color2, color3, color4, color5, color6, color7, color8};","import React from \"react\";\r\nimport {\r\n  FastForward,\r\n  FastRewind,\r\n  SkipPrevious,\r\n  SkipNext,\r\n  Pause,\r\n  PlayArrow,\r\n} from \"@material-ui/icons\";\r\n\r\nimport * as utils from \"./utilities.js\";\r\n\r\n/* The Controls component is responsible for manipulating which frame is currently shown on the Display.\r\nThis includes rewinding, fast-forwarding, etc. The controls are also responsible for manipulating\r\nthe seed array - this includes randomizing the existing seed array, or handling custom values\r\ninput by the user.*/\r\nclass Controls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let startingValues = this.seedArrayToCustomValues(\r\n      this.props.seedArray\r\n    );\r\n    this.state = {\r\n      speedModifier: 0,\r\n      customValues: startingValues,\r\n    };\r\n    this.handleSpeedSliderChange = this.handleSpeedSliderChange.bind(this);\r\n    this.handleCustomValuesChange = this.handleCustomValuesChange.bind(this);\r\n  }\r\n\r\n  handleSpeedSliderChange(event) {\r\n    let speedModifier = event.target.value;\r\n    this.props.changeAnimationSpeed(\r\n      Math.pow(4, -(speedModifier / 10)) * this.props.baseAnimationSpeed\r\n    );\r\n    this.setState({ speedModifier: speedModifier });\r\n  }\r\n  pauseAndChangeFrame(frameIndex) {\r\n    this.props.pause(true);\r\n    this.props.changeFrame(frameIndex);\r\n  }\r\n\r\n  seedArrayToCustomValues(arr) {\r\n    let customValues = \"\";\r\n    for (let k = 0; k < arr.length; k++) {\r\n      customValues += arr[k][0] + \", \";\r\n    }\r\n    if (customValues) {\r\n      customValues = customValues.substring(0, customValues.length - 2);\r\n    }\r\n    return customValues;\r\n  }\r\n\r\n  handleCustomValuesChange(event) {\r\n    let customValues = event.target.value;\r\n    this.setState({ customValues: customValues });\r\n  }\r\n\r\n  randomizeArray(array) {\r\n    let randomizedArray = array.slice();\r\n    for (let k = 0; k < randomizedArray.length; k++) {\r\n      let randInd = Math.floor(\r\n        Math.random() * (randomizedArray.length - k) + k\r\n      );\r\n      [randomizedArray[k], randomizedArray[randInd]] = [\r\n        randomizedArray[randInd],\r\n        randomizedArray[k],\r\n      ];\r\n    }\r\n    return randomizedArray;\r\n  }\r\n\r\n  render() {\r\n    let frameIndex = (this.props.frameIndex + 1).toString();\r\n    let maxFrameIndex = (this.props.maxFrameIndex + 1).toString();\r\n    frameIndex = frameIndex.padStart(maxFrameIndex.length, \" \");\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <div className=\"frame-controls\">\r\n              <div>\r\n                <span className=\"frame-slider-label\">\r\n                  {\"Frame: \" + frameIndex + \"/\" + maxFrameIndex}\r\n                </span>\r\n              </div>\r\n              <input\r\n                className=\"frame-slider\"\r\n                type=\"range\"\r\n                min={0}\r\n                max={this.props.maxFrameIndex}\r\n                value={this.props.frameIndex}\r\n                onChange={(event) =>\r\n                  this.pauseAndChangeFrame(event.target.value)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"playback-bar\">\r\n            <button\r\n              className=\"btn btn-outline-dark\"\r\n              onClick={() => {\r\n                let randomizedArray = this.randomizeArray(\r\n                  this.props.seedArray\r\n                );\r\n                this.props.changeseedArray(randomizedArray);\r\n                this.setState({\r\n                  customValues: this.seedArrayToCustomValues(\r\n                    randomizedArray\r\n                  ),\r\n                });\r\n              }}\r\n            >\r\n              Randomize Order\r\n            </button>\r\n            <div className=\"step-controls\">\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) => this.pauseAndChangeFrame(0)}\r\n              >\r\n                <FastRewind />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.frameIndex - 1)\r\n                }\r\n              >\r\n                <SkipPrevious />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) => this.props.pause(!this.props.isPaused)}\r\n              >\r\n                {this.props.isPaused ? <PlayArrow /> : <Pause />}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.frameIndex + 1)\r\n                }\r\n              >\r\n                <SkipNext />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.maxFrameIndex)\r\n                }\r\n              >\r\n                <FastForward />\r\n              </button>\r\n            </div>\r\n            <form>\r\n              <label className=\"speed\">\r\n                <span className=\"speed-label\">Speed:</span>\r\n                <input\r\n                  className=\"speed-slider\"\r\n                  type=\"range\"\r\n                  min={-10}\r\n                  max={10}\r\n                  value={this.state.speedModifier}\r\n                  onChange={this.handleSpeedSliderChange}\r\n                />\r\n              </label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <ValueCustomizer\r\n          customValues={this.state.customValues}\r\n          handleCustomValuesChange={this.handleCustomValuesChange}\r\n          changeseedArray={this.props.changeseedArray}\r\n          maxVal={this.props.maxVal}\r\n          minVal={this.props.minVal}\r\n          maxLength={this.props.maxLength}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ValueCustomizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCustomValuesSubmission = this.handleCustomValuesSubmission.bind(\r\n      this\r\n    );\r\n\r\n    this.state = {\r\n      validCustomValueSubmission: true,\r\n    };\r\n  }\r\n\r\n  customValuesToseedArray(customValues) {\r\n    if (!customValues) {\r\n      return [];\r\n    }\r\n    const regex = /[0-9]+/g;\r\n    return customValues\r\n      .match(regex)\r\n      .map((value) => [parseInt(value), utils.color5]);\r\n  }\r\n\r\n  validateCustomValues(customValues) {\r\n    let regex = /^(\\s*[0-9]+\\s*,)*(\\s*[0-9]+\\s*)?$/g;\r\n    if (customValues.match(regex) == null) {\r\n      return false;\r\n    }\r\n    regex = /[0-9]+/g;\r\n    let values = customValues.match(regex).map((value) => parseInt(value));\r\n    if (\r\n      Math.max(...values) > 100 ||\r\n      Math.min(...values) < 0 ||\r\n      values.length >= this.props.maxLength\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleCustomValuesSubmission(event) {\r\n    let customValues = this.props.customValues;\r\n    event.preventDefault();\r\n    if (this.validateCustomValues(customValues)) {\r\n      this.props.changeseedArray(\r\n        this.customValuesToseedArray(customValues)\r\n      );\r\n      this.setState({ validCustomValueSubmission: true });\r\n    } else {\r\n      this.setState({ validCustomValueSubmission: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let validCriteriaMessage = (\r\n      <span\r\n        className={\r\n          this.state.validCustomValueSubmission\r\n            ? \"\"\r\n            : \"invalid-custom-value-submission\"\r\n        }\r\n      >\r\n        {\"Custom values must be integers greater than or equal to \" +\r\n          this.props.minVal +\r\n          \" and less than \" +\r\n          this.props.maxVal +\r\n          \".\"}\r\n        <br />\r\n        {\"Separate values using commas. Maximum length of \" +\r\n          this.props.maxLength +\r\n          \" values.\"}\r\n      </span>\r\n    );\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleCustomValuesSubmission}>\r\n          <label className=\"custom-value-submission-label\">\r\n            <textarea\r\n              rows=\"2\"\r\n              cols=\"100\"\r\n              onChange={this.props.handleCustomValuesChange}\r\n              value={this.props.customValues}\r\n            />\r\n            <input\r\n              className=\"btn btn-outline-dark\"\r\n              type=\"submit\"\r\n              value=\"Customize Values\"\r\n            />\r\n          </label>\r\n        </form>\r\n        <div>{validCriteriaMessage}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\n\r\n/* The Display component is responsible for painting the current frame and legend onto the Canvas.*/\r\nclass Display extends React.Component {\r\n  paintFrame() {\r\n    let canvas = this.props.canvasRef.current;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let frame = this.props.frame;\r\n\r\n    let barWidth = this.props.barWidth;\r\n    let barSpacing = this.props.barSpacing;\r\n    let xOffset =\r\n      (canvas.width - frame.length * (barWidth + barSpacing) - barSpacing) / 2;\r\n    let yOffset = this.props.yOffset;\r\n    let fontSize = this.props.fontSize;\r\n    let magnitudeMultiplier = this.props.magnitudeMultiplier;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    for (let k = 0; k < frame.length; k++) {\r\n      let val, color;\r\n      [val, color] = frame[k];\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(\r\n        xOffset + (barWidth + barSpacing) * k,\r\n        canvas.height - yOffset,\r\n        barWidth,\r\n        -val * magnitudeMultiplier\r\n      );\r\n      ctx.font = fontSize + \"px Roboto Mono\";\r\n      ctx.fillText(\r\n        val,\r\n        xOffset + (barWidth + barSpacing) * k,\r\n        canvas.height - yOffset + fontSize\r\n      );\r\n    }\r\n  }\r\n\r\n  // Draw the legend on the canvas\r\n  paintLegend() {\r\n    let canvas = this.props.canvasRef.current;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let startX = 95;\r\n    let startY = 50;\r\n    let lineSpacing = 10;\r\n    let blockSize = 10;\r\n    let blockSpacing = 5;\r\n    let fontSize = 20;\r\n    let text, color;\r\n    let currentLegend = this.props.legend;\r\n    [text, color] = currentLegend[0];\r\n    ctx.font = fontSize + \"px Roboto Mono\";\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(text, startX, startY + fontSize / 2);\r\n    for (let k = 1; k < currentLegend.length; k++) {\r\n      let text, color;\r\n      [text, color] = currentLegend[k];\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(\r\n        startX,\r\n        startY + (fontSize + lineSpacing) * k,\r\n        blockSize,\r\n        blockSize\r\n      );\r\n      ctx.font = fontSize + \"px Roboto Mono\";\r\n      ctx.fillText(\r\n        text,\r\n        startX + blockSize + blockSpacing,\r\n        startY + (fontSize + lineSpacing) * k + fontSize / 2\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.paintFrame();\r\n    this.paintLegend();\r\n  }\r\n\r\n  render() {\r\n    let frame = this.props.frame;\r\n    if (this.props.canvasRef.current) {\r\n      this.paintFrame();\r\n      this.paintLegend();\r\n    }\r\n    return (\r\n      <div>\r\n        <canvas\r\n          width={this.props.width}\r\n          height={this.props.height}\r\n          ref={this.props.canvasRef}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","/* The AlgorithmSelect component is responsible for displaying the algorithm options\r\nand running the algorithm on the seed array when an algorithm is selected.*/\r\nfunction AlgorithmSelect(props) {\r\n  let currentAlgorithmName, currentAlgorithmRunner;\r\n  [currentAlgorithmName, currentAlgorithmRunner] = props.currentAlgorithm;\r\n  return (\r\n    <div>\r\n      <div className=\"select-row\">\r\n        {props.algorithmOptions.map(([algorithmName, algorithm]) => {\r\n          let classes = \"btn btn-outline-dark algorithm-button \";\r\n          if (currentAlgorithmName == algorithmName) {\r\n            classes += \"active \";\r\n          }\r\n          return (\r\n            <button\r\n              key={algorithmName}\r\n              className={classes}\r\n              onClick={() => {\r\n                props.changeAlgorithm([algorithmName, algorithm]);\r\n                props.runAlgorithm();\r\n              }}\r\n            >\r\n              {algorithmName}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlgorithmSelect;\r\n","import React from \"react\";\r\n\r\nimport Controls from \"./SortControls.js\";\r\nimport Display from \"./SortDisplay.js\";\r\nimport AlgorithmSelect from \"./SortSelect.js\";\r\nimport * as utils from \"./utilities.js\";\r\n\r\n/* The Visualizer component is responsible for managing the state data that is shared \r\nacross the Display, the Controls, and the AlgorithmSelect. This includes things\r\nlike the current frame on display, the current animation speed, the seed array, etc.*/\r\nclass Visualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let seedArray = this.generateseedArray(\r\n      this.props.arrayLength,\r\n      this.props.minimum,\r\n      this.props.maximum\r\n    );\r\n    let defaultAlgorithmName, defaultAlgorithmRunner;\r\n    [\r\n      defaultAlgorithmName,\r\n      defaultAlgorithmRunner,\r\n    ] = this.props.defaultAlgorithm;\r\n    let frames, legend, description;\r\n    [frames, legend, description] = defaultAlgorithmRunner(seedArray);\r\n    this.state = {\r\n      seedArray: seedArray,\r\n      isPaused: true,\r\n      frames: frames,\r\n      legend: legend,\r\n      frameIndex: 0,\r\n      animationSpeed: this.props.baseAnimationSpeed,\r\n      currentAlgorithm: this.props.defaultAlgorithm,\r\n      description: description,\r\n    };\r\n    this.canvasRef = React.createRef();\r\n    this.animationInterval = null;\r\n    this.runAlgorithm = this.runAlgorithm.bind(this);\r\n    this.pause = this.pause.bind(this);\r\n    this.changeFrame = this.changeFrame.bind(this);\r\n    this.changeAnimationSpeed = this.changeAnimationSpeed.bind(this);\r\n    this.changeAlgorithm = this.changeAlgorithm.bind(this);\r\n    this.changeseedArray = this.changeseedArray.bind(this);\r\n  }\r\n  generateseedArray(arrayLength, minimum, maximum) {\r\n    let seedArray = [];\r\n    for (let k = 0; k < arrayLength; k++) {\r\n      let value = Math.floor(Math.random() * (maximum + 1)) + minimum;\r\n      seedArray.push([value, utils.color5]);\r\n    }\r\n    return seedArray;\r\n  }\r\n\r\n  runAlgorithm() {\r\n    // Running the algorithm depends on the state of the starting Array.\r\n    this.setState((state) => {\r\n      let algorithmName, algorithmRunner;\r\n      [algorithmName, algorithmRunner] = state.currentAlgorithm;\r\n      let frames, legend, description;\r\n      [frames, legend, description] = algorithmRunner(state.seedArray);\r\n      clearInterval(this.animationInterval);\r\n      return {\r\n        legend: legend,\r\n        frames: frames,\r\n        description: description,\r\n        frameIndex: 0,\r\n        isPaused: true,\r\n      };\r\n    });\r\n  }\r\n\r\n  changeAlgorithm(currentAlgorithm) {\r\n    this.setState({ currentAlgorithm: currentAlgorithm });\r\n  }\r\n\r\n  pause(shouldPause) {\r\n    let isPaused = this.state.isPaused;\r\n    if (shouldPause == isPaused) {\r\n      return;\r\n    }\r\n    clearInterval(this.animationInterval);\r\n    if (!shouldPause) {\r\n      this.animationInterval = setInterval(\r\n        () => this.changeFrame(this.state.frameIndex + 1),\r\n        this.state.animationSpeed\r\n      );\r\n    }\r\n    this.setState({ isPaused: shouldPause });\r\n  }\r\n\r\n  changeFrame(frameIndex) {\r\n    frameIndex = Math.max(\r\n      0,\r\n      Math.min(this.state.frames.length - 1, frameIndex)\r\n    );\r\n    this.setState({ frameIndex: frameIndex });\r\n  }\r\n\r\n  changeAnimationSpeed(speed) {\r\n    if (!this.state.isPaused) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = setInterval(\r\n        () => this.changeFrame(this.state.frameIndex + 1),\r\n        speed\r\n      );\r\n    }\r\n    this.setState({ animationSpeed: speed });\r\n  }\r\n\r\n  changeseedArray(seedArray) {\r\n    this.setState({ seedArray: seedArray });\r\n    this.runAlgorithm();\r\n  }\r\n\r\n  render() {\r\n    let currentFrame = this.state.frames[this.state.frameIndex];\r\n    return (\r\n      <div>\r\n        <AlgorithmSelect\r\n          currentAlgorithm={this.state.currentAlgorithm}\r\n          algorithmOptions={this.props.algorithmOptions}\r\n          runAlgorithm={this.runAlgorithm}\r\n          changeAlgorithm={this.changeAlgorithm}\r\n        />\r\n        <div className=\"Description\">\r\n          <div>{this.state.description}</div>\r\n        </div>\r\n        <Display\r\n          canvasRef={this.canvasRef}\r\n          width={1200}\r\n          height={480}\r\n          frame={currentFrame}\r\n          legend={this.state.legend}\r\n          barWidth={10}\r\n          barSpacing={12}\r\n          yOffset={50}\r\n          fontSize={12}\r\n          magnitudeMultiplier={2}\r\n        />\r\n        <Controls\r\n          frame={this.state.frameIndex}\r\n          pause={this.pause}\r\n          isPaused={this.state.isPaused}\r\n          maxFrameIndex={this.state.frames.length - 1}\r\n          frameIndex={this.state.frameIndex}\r\n          changeFrame={this.changeFrame}\r\n          baseAnimationSpeed={this.props.baseAnimationSpeed}\r\n          changeAnimationSpeed={this.changeAnimationSpeed}\r\n          seedArray={this.state.seedArray}\r\n          changeseedArray={this.changeseedArray}\r\n          maxVal={this.props.maximum}\r\n          minVal={this.props.minimum}\r\n          maxLength={this.props.maxLength}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualizer;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Visualizer from \"./SortVisualizer.js\";\r\nimport { runHeapsort } from \"./sorts/heapsort.js\";\r\nimport { runQuicksort } from \"./sorts/quicksort.js\";\r\nimport { runMergesort } from \"./sorts/mergesort.js\";\r\nimport { runSelectionsort } from \"./sorts/selectionsort.js\";\r\nimport { runBubblesort } from \"./sorts/bubblesort.js\";\r\nimport { runInsertionsort } from \"./sorts/insertionsort.js\";\r\n\r\nconst algorithmOptions = [\r\n  [\"Quicksort\", runQuicksort],\r\n  [\"Mergesort\", runMergesort],\r\n  [\"Heapsort\", runHeapsort],\r\n  [\"Insertion sort\", runInsertionsort],\r\n  [\"Selection sort\", runSelectionsort],\r\n  [\"Bubble Sort\", runBubblesort],\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <span>\r\n        <b>Sort Visualizer</b>\r\n      </span>\r\n      <Visualizer\r\n        arrayLength={40}\r\n        minimum={0}\r\n        maximum={100}\r\n        maxLength={50}\r\n        baseAnimationSpeed={100}\r\n        algorithmOptions={algorithmOptions}\r\n        defaultAlgorithm={algorithmOptions[0]}\r\n      />\r\n      <br />\r\n      <br />\r\n      <div className=\"description-block\">\r\n        Use this visualizer to compare different sorts. Each \"frame\" of the\r\n        visualization roughly corresponds to a single comparison between two elements. Try\r\n        customizing the values!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runQuicksort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(originalArray)];\r\n    function quicksort(start, end) {\r\n        if (start >= end) {\r\n            return;\r\n        }\r\n        var midpoint = partition(start, end);\r\n        quicksort(start, midpoint - 1);\r\n        quicksort(midpoint + 1, end);\r\n    }\r\n\r\n    function partition(start, end) {\r\n        var pivot = end;\r\n        var pval, pr, pg, pb;\r\n        [pval, pr, pg, pb] = workingArray[pivot];\r\n        utils.colorRange(workingArray, start, end, utils.color4);\r\n        frames.push(utils.copyArray(workingArray));\r\n        utils.colorIndex(workingArray, pivot, utils.color2);\r\n        frames.push(utils.copyArray(workingArray));\r\n        var j = start;\r\n        for (var k = start; k < end; k++) {\r\n            var val, r, g, b;\r\n            [val, r, g, b] = workingArray[k];\r\n            if (val < pval) {\r\n                [workingArray[j], workingArray[k]] = [\r\n                    workingArray[k],\r\n                    workingArray[j],\r\n                ];\r\n                j += 1;\r\n            }\r\n            utils.colorRange(workingArray, start, j - 1, utils.color3);\r\n            utils.colorRange(workingArray, j, k, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));\r\n        }\r\n        [workingArray[j], workingArray[pivot]] = [\r\n            workingArray[pivot],\r\n            workingArray[j],\r\n        ];\r\n        frames.push(utils.copyArray(workingArray));\r\n        utils.colorRange(workingArray, start, end, utils.color5);\r\n        return j;\r\n    }\r\n    quicksort(0, workingArray.length - 1);\r\n    frames.push(workingArray);\r\n    var legend = [\r\n        [\"Quicksort Legend\", utils.color5],\r\n        [\"Remaining elements in partition\", utils.color4],\r\n        [\"Pivot\", utils.color2],\r\n        [\"Elements in partition less than pivot\", utils.color3],\r\n        [\"Elements in partition greater than or equal to pivot\", utils.color1],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Quicksort</b> is an efficient in-place sorting algorithm with an average\r\n            runtime of O(n log n). <br /><a href=\"https://en.wikipedia.org/wiki/Quicksort\">Learn about how Quicksort works on Wikipedia.</a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from '../utilities.js';\r\n\r\nexport function runMergesort(originalArray){\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    function mergesort(start, end){\r\n        if (start == end){\r\n            return workingArray[start]\r\n        } else {\r\n            var midpoint = Math.floor((start + end) / 2);\r\n            mergesort(start, midpoint);\r\n            mergesort(midpoint + 1, end);\r\n            utils.colorRange(workingArray, start, midpoint, utils.color1);\r\n            utils.colorRange(workingArray, midpoint + 1, end, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            var arr = [];\r\n            var k = start;\r\n            var j = midpoint + 1;\r\n            while (k <= midpoint && j <= end){\r\n                var kval, kr, kg, kb;\r\n                [kval, kr, kg, kb] = workingArray[k];\r\n                var jval, jr, jg, jb;\r\n                [jval, jr, jg, jb] = workingArray[j];\r\n                if(kval <= jval){\r\n                    arr.push(workingArray[k]);\r\n                    k += 1;                    \r\n                } else {\r\n                    arr.push(workingArray[j]); \r\n                    j += 1;                                       \r\n                }\r\n            }\r\n            while (k <= midpoint){\r\n                arr.push(workingArray[k]);\r\n                k += 1;\r\n            }\r\n            while (j <= end){\r\n                arr.push(workingArray[j]);\r\n                j += 1;\r\n            }\r\n            var j = 0;\r\n            for (var k = start; k <= end; k++){\r\n                workingArray[k] = arr[j];\r\n                utils.colorIndex(workingArray, k, utils.color2);\r\n                frames.push(utils.copyArray(workingArray));\r\n                j += 1;\r\n            }\r\n            utils.colorRange(workingArray, start, end, utils.color5);\r\n            frames.push(utils.copyArray(workingArray));\r\n        }\r\n    }\r\n    mergesort(0, workingArray.length - 1);\r\n    var description = (\r\n        <span>\r\n            <b>Mergesort</b> is an efficient stable sorting algorithm with a\r\n            runtime of O(n log n) and a memory requirement of O(n). \r\n            <br /><a href=\"https://en.wikipedia.org/wiki/Merge_sort\">Learn about how Mergesort works on Wikipedia.</a>\r\n        </span>\r\n    );    \r\n    var legend = [[\"Mergesort Legend\", utils.color5], [\"Left in-order partition\", utils.color1], [\"Right in-order partition\", utils.color3], [\"Merged in-order partition\", utils.color2]];\r\n    return [frames, legend, description];\r\n}","import * as utils from '../utilities.js';\r\n\r\nexport function runHeapsort(originalArray){\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(originalArray)];\r\n    var heap_size = 0;\r\n    for(var k = 0; k < originalArray.length; k++){\r\n        insertIntoHeap();\r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    for(var k = workingArray.length - 1; k >= 0; k--){\r\n        pop_from_heap();\r\n    }\r\n\r\n    function insertIntoHeap(){\r\n        var ind = heap_size;\r\n        utils.colorIndex(workingArray, ind, utils.color1);\r\n        frames.push(utils.copyArray(workingArray));            \r\n        utils.colorIndex(workingArray, ind, utils.color3);        \r\n        var ival, ir, ig, ib;\r\n        [ival, ir, ig, ib] = workingArray[ind];\r\n        var parent = Math.floor((ind - 1) / 2);\r\n        var pval, pr, pg, pb;\r\n        if(parent > -1){\r\n            [pval, pr, pg, pb] = workingArray[parent];\r\n        }\r\n        while(parent > 0 && ival > pval){\r\n            utils.colorIndex(workingArray, ind, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));            \r\n            utils.colorIndex(workingArray, ind, utils.color3);\r\n            [workingArray[ind], workingArray[parent]] = [workingArray[parent], workingArray[ind]];\r\n            ind = parent;\r\n            parent = Math.floor((ind - 1) / 2);\r\n            [pval, pr, pg, pb] = workingArray[parent];\r\n            [ival, ir, ig, ib] = workingArray[ind];\r\n        }\r\n        if (ival > pval){\r\n            [workingArray[ind], workingArray[parent]] = [workingArray[parent], workingArray[ind]];            \r\n        }\r\n        heap_size += 1;\r\n    }\r\n\r\n    function pop_from_heap(){\r\n        [workingArray[0], workingArray[heap_size - 1]] = [workingArray[heap_size - 1], workingArray[0]];\r\n        utils.colorIndex(workingArray, heap_size - 1, utils.color2);\r\n        utils.colorIndex(workingArray, 0, utils.color1);        \r\n        frames.push(utils.copyArray(workingArray));\r\n        heap_size -= 1;\r\n        var ind = 0;\r\n        var ival, ir, ig, ib;\r\n        [ival, ir, ig, ib] = workingArray[ind];\r\n        var child1 = ind * 2 + 1;\r\n        var c1val, c1r, c1g, c1b;\r\n        if (child1 < heap_size){\r\n            [c1val, c1r, c1g, c1b] = workingArray[child1];\r\n        }\r\n        var child2 = ind * 2 + 2;\r\n        var c2val, c2r, c2g, c2b;\r\n        if (child2 < heap_size){\r\n            [c2val, c2r, c2g, c2b] = workingArray[child2];\r\n        }\r\n        while(child1 < heap_size && child2 < heap_size  && (ival < c1val || ival < c2val)){\r\n            if (c1val > c2val){\r\n                [workingArray[child1], workingArray[ind]] = [workingArray[ind], workingArray[child1]];\r\n                ind = child1;\r\n            } else {\r\n                [workingArray[child2], workingArray[ind]] = [workingArray[ind], workingArray[child2]];                \r\n                ind = child2;\r\n            }\r\n            frames.push(utils.copyArray(workingArray)); \r\n            child1 = ind * 2 + 1;\r\n            if (child1 < heap_size){\r\n                [c1val, c1r, c1g, c1b] = workingArray[child1];\r\n            }            \r\n            child2 = ind * 2 + 2;\r\n            if (child2 < heap_size){\r\n                [c2val, c2r, c2g, c2b] = workingArray[child2];\r\n            }\r\n        }\r\n        if (child2 < heap_size && ival < c2val){\r\n            [workingArray[child2], workingArray[ind]] = [workingArray[ind], workingArray[child2]];                \r\n        } else if(child1 < heap_size && ival < c1val){\r\n            [workingArray[child1], workingArray[ind]] = [workingArray[ind], workingArray[child1]];            \r\n        }\r\n        utils.colorIndex(workingArray, ind, utils.color3);        \r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var description = (\r\n        <span>\r\n            <b>Heapsort</b> is an efficient in-place sorting algorithm with a\r\n            runtime of O(n log n). \r\n            <br /><a href=\"https://en.wikipedia.org/wiki/Heapsort\">Learn about how Heapsort works on Wikipedia.</a>\r\n        </span>\r\n    );        \r\n    var legend = [[\"Heapsort Legend\", utils.color5], [\"In-place max heap\", utils.color3], [\"Element being sifted\", utils.color1], [\"Sorted elements\", utils.color2]]\r\n    return [frames, legend, description];\r\n}","import * as utils from \"../utilities.js\";\r\n\r\nexport function runInsertionsort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    for (var k = 0; k < workingArray.length; k++) {\r\n        utils.colorIndex(workingArray, k, utils.color1);\r\n        var kval, kr, kg, kb;\r\n        [kval, kr, kg, jb] = workingArray[k];\r\n        var jval, jr, jg, jb;\r\n        for (var j = 0; j < k; j++) {\r\n            [jval, jr, jg, jb] = workingArray[j];\r\n            utils.colorRange(workingArray, 0, j, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            if (kval < jval) {\r\n                frames.pop();\r\n                utils.colorIndex(workingArray, j, utils.color2);\r\n                for (var m = k; m > j; m--) {\r\n                    [workingArray[m], workingArray[m - 1]] = [\r\n                        workingArray[m - 1],\r\n                        workingArray[m],\r\n                    ];\r\n                    frames.push(utils.copyArray(workingArray));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        utils.colorRange(workingArray, 0, k, utils.color2);\r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Insertion Sort Legend\", utils.color5],\r\n        [\"Target element\", utils.color1],\r\n        [\"Items less than or equal to target element\", utils.color3],\r\n        [\"Sorted elements\", utils.color2],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Insertion sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Insertion_sort\">\r\n                Learn about how Insertion sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runSelectionsort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    for (var k = 0; k < workingArray.length; k++) {\r\n        var min = k;\r\n        var minval, mr, mg, mb;\r\n        [minval, mr, mg, mb] = workingArray[min];\r\n        utils.colorIndex(workingArray, min, utils.color1);\r\n        for (var j = k + 1; j < workingArray.length; j++) {\r\n            var jval, jr, jg, jb;\r\n            [jval, jr, jg, jb] = workingArray[j];\r\n            if (jval < minval) {\r\n                utils.colorIndex(workingArray, min, utils.color5);\r\n                min = j;\r\n                [minval, mr, mg, mb] = workingArray[min];\r\n            }\r\n            utils.colorIndex(workingArray, j, utils.color3);\r\n            utils.colorIndex(workingArray, min, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));\r\n            utils.colorIndex(workingArray, j, utils.color5);\r\n            utils.colorIndex(workingArray, min, utils.color1);\r\n        }\r\n        [workingArray[min], workingArray[k]] = [\r\n            workingArray[k],\r\n            workingArray[min],\r\n        ];\r\n        utils.colorIndex(workingArray, k, utils.color2);\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Selection Sort Legend\", utils.color5],\r\n        [\"Current element\", utils.color3],\r\n        [\"Current minimum among unsorted elements\", utils.color1],\r\n        [\"Sorted elements\", utils.color2],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Selection sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Selection_sort\">\r\n                Learn about how Selection sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runBubblesort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    var run = true;\r\n    while (run) {\r\n        var swaps = 0;\r\n        for (var k = 1; k < workingArray.length; k++) {\r\n            var kval, kr, kg, kb;\r\n            [kval, kr, kg, kb] = workingArray[k];\r\n            var pval, pr, pg, pb;\r\n            [pval, pr, pg, pb] = workingArray[k - 1];\r\n            utils.colorIndex(workingArray, k, utils.color1);\r\n            utils.colorIndex(workingArray, k - 1, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            if (kval < pval) {\r\n                [workingArray[k], workingArray[k - 1]] = [\r\n                    workingArray[k - 1],\r\n                    workingArray[k],\r\n                ];\r\n                utils.colorIndex(workingArray, k, utils.color3);\r\n                utils.colorIndex(workingArray, k - 1, utils.color1);\r\n                frames.push(utils.copyArray(workingArray));\r\n                swaps += 1;\r\n            }\r\n            utils.colorIndex(workingArray, k, utils.color5);\r\n            utils.colorIndex(workingArray, k - 1, utils.color5);\r\n        }\r\n        if (swaps == 0) {\r\n            run = false;\r\n        }\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Bubblesort Legend\", utils.color5],\r\n        [\"Left element\", utils.color3],\r\n        [\"Right element\", utils.color1],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Bubble sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Bubble_sort\">\r\n                Learn about how Bubble sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport WebFont from \"webfontloader\";\r\n\r\nlet init = () =>\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  \r\nWebFont.load({\r\n  google: { families: [\"Roboto Mono\"] },\r\n  active: init,\r\n});\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}