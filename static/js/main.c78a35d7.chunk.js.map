{"version":3,"sources":["utilities.js","logo.svg","App.js","sorts/quicksort.js","sorts/mergesort.js","sorts/heapsort.js","sorts/insertionsort.js","sorts/selectionsort.js","sorts/bubblesort.js","reportWebVitals.js","index.js"],"names":["color1","color2","color3","color4","color5","copyArray","arr","Array","isArray","newArr","k","length","push","colorIndex","ind","color","colorRange","start","end","algorithmOptions","originalArray","workingArray","utils","frames","quicksort","midpoint","pval","pivot","j","val","partition","href","mergesort","Math","floor","kval","jval","heap_size","insertIntoHeap","pop_from_heap","ival","parent","c1val","child1","c2val","child2","pop","m","minval","min","run","swaps","AlgorithmSelect","props","currentAlgorithmName","currentAlgorithm","className","map","algorithmName","algorithm","algorithmDescription","classes","onClick","changeAlgorithm","runAlgorithm","Description","description","Display","canvas","this","canvasRef","current","ctx","getContext","frame","barWidth","barSpacing","xOffset","width","yOffset","fontSize","magnitudeMultiplier","clearRect","height","fillStyle","fillRect","font","fillText","text","currentLegend","legend","startY","startX","paintFrame","paintLegend","ref","React","Component","Controls","startingValues","startingArrayToCustomValues","startingArray","state","speedModifier","customValues","handleSpeedSliderChange","bind","handleCustomValuesChange","event","target","value","changeAnimationSpeed","pow","baseAnimationSpeed","setState","frameIndex","pause","changeFrame","substring","array","randomizedArray","slice","randInd","random","toString","maxFrameIndex","padStart","type","max","onChange","pauseAndChangeFrame","randomizeArray","changeStartingArray","FastRewind","SkipPrevious","isPaused","PlayArrow","Pause","SkipNext","FastForward","maxVal","minVal","maxLength","ValueCustomizer","handleCustomValuesSubmission","validCustomValueSubmission","match","parseInt","regex","values","preventDefault","validateCustomValues","customValuesToStartingArray","validCriteriaMessage","onSubmit","rows","cols","Visualizer","generateStartingArray","arrayLength","minimum","maximum","defaultAlgorithm","defaultAlgorithmRunner","animationSpeed","createRef","animationInterval","algorithmRunner","clearInterval","shouldPause","setInterval","speed","currentFrame","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","active","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c78a35d7.chunk.js","sourcesContent":["const color1 = \"#FF0000\";\r\nconst color2 = \"#008000\";\r\nconst color3 = \"#0000FF\";\r\nconst color4 = \"#8B4513\";\r\nconst color5 = \"#000000\";\r\nconst color6 = \"#FFFFFF\";\r\nconst color7 = \"#010101\";\r\nconst color8 = \"#800080\";\r\n\r\nexport function copyArray(arr){\r\n    if(!Array.isArray(arr)){\r\n        return arr;\r\n    } else {\r\n        let newArr = []\r\n        for(let k = 0; k < arr.length; k++){\r\n            newArr.push(copyArray(arr[k]));\r\n        }\r\n        return newArr;\r\n    }\r\n}\r\n\r\nexport function colorIndex(arr, ind, color){\r\n    arr[ind] = [arr[ind][0], color];\r\n}\r\n\r\nexport function colorRange(arr, start, end, color){\r\n    for(let k = start; k <= end; k++){\r\n        colorIndex(arr, k, color);\r\n    }\r\n}\r\n\r\nexport {color1, color2, color3, color4, color5, color6, color7, color8};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { runHeapsort } from \"./sorts/heapsort.js\";\r\nimport { runQuicksort } from \"./sorts/quicksort.js\";\r\nimport { runMergesort } from \"./sorts/mergesort.js\";\r\nimport { runSelectionsort } from \"./sorts/selectionsort.js\";\r\nimport { runBubblesort } from \"./sorts/bubblesort.js\";\r\nimport { runInsertionsort } from \"./sorts/insertionsort.js\";\r\nimport * as utils from \"./utilities.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  FastForward,\r\n  FastRewind,\r\n  SkipPrevious,\r\n  SkipNext,\r\n  Pause,\r\n  PlayArrow,\r\n} from \"@material-ui/icons\";\r\n\r\nconst algorithmOptions = [\r\n  [\"Quicksort\", runQuicksort, \"Quicksort description\"],\r\n  [\"Mergesort\", runMergesort, \"Mergesort Description\"],\r\n  [\"Heapsort\", runHeapsort, \"Heapsort Description\"],\r\n  [\"Insertion sort\", runInsertionsort, \"Insertionsort Description\"],\r\n  [\"Selection sort\", runSelectionsort, \"Selectionsort Description\"],\r\n  [\"Bubble Sort\", runBubblesort, \"Bubblesort Description\"],\r\n];\r\n\r\nfunction AlgorithmSelect(props) {\r\n  let currentAlgorithmName, currentAlgorithmRunner, currentAlgorithmDescription;\r\n  [\r\n    currentAlgorithmName,\r\n    currentAlgorithmRunner,\r\n    currentAlgorithmDescription,\r\n  ] = props.currentAlgorithm;\r\n  return (\r\n    <div>\r\n      <div className=\"select-row\">\r\n        {props.algorithmOptions.map(\r\n          ([algorithmName, algorithm, algorithmDescription]) => {\r\n            let classes = \"btn btn-outline-dark algorithm-button \";\r\n            if (currentAlgorithmName == algorithmName) {\r\n              classes += \"active \";\r\n            }\r\n            return (\r\n              <button\r\n                key={algorithmName}\r\n                className={classes}\r\n                onClick={() => {\r\n                  props.changeAlgorithm([\r\n                    algorithmName,\r\n                    algorithm,\r\n                    algorithmDescription,\r\n                  ]);\r\n                  props.runAlgorithm();\r\n                }}\r\n              >\r\n                {algorithmName}\r\n              </button>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Description(props) {\r\n  return (\r\n    <div className=\"Description\">\r\n      <div>{props.description}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Display extends React.Component {\r\n  paintFrame() {\r\n    let canvas = this.props.canvasRef.current;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let frame = this.props.frame;\r\n\r\n    let barWidth = this.props.barWidth;\r\n    let barSpacing = this.props.barSpacing;\r\n    let xOffset =\r\n      (canvas.width - frame.length * (barWidth + barSpacing) - barSpacing) / 2;\r\n    let yOffset = this.props.yOffset;\r\n    let fontSize = this.props.fontSize;\r\n    let magnitudeMultiplier = this.props.magnitudeMultiplier;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    for (let k = 0; k < frame.length; k++) {\r\n      let val, color;\r\n      [val, color] = frame[k];\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(\r\n        xOffset + (barWidth + barSpacing) * k,\r\n        canvas.height - yOffset,\r\n        barWidth,\r\n        -val * magnitudeMultiplier\r\n      );\r\n      ctx.font = fontSize + \"px Roboto Mono\";\r\n      ctx.fillText(\r\n        val,\r\n        xOffset + (barWidth + barSpacing) * k,\r\n        canvas.height - yOffset + fontSize\r\n      );\r\n    }\r\n  }\r\n\r\n  // Draw the legend on the canvas\r\n  paintLegend() {\r\n    let canvas = this.props.canvasRef.current;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let startX = 95;\r\n    let startY = 50;\r\n    let lineSpacing = 10;\r\n    let blockSize = 10;\r\n    let blockSpacing = 5;\r\n    let fontSize = 20;\r\n    let text, color;\r\n    let currentLegend = this.props.legend;\r\n    [text, color] = currentLegend[0];\r\n    ctx.font = fontSize + \"px Roboto Mono\";\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(text, startX, startY + fontSize / 2);\r\n    for (let k = 1; k < currentLegend.length; k++) {\r\n      let text, color;\r\n      [text, color] = currentLegend[k];\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(\r\n        startX,\r\n        startY + (fontSize + lineSpacing) * k,\r\n        blockSize,\r\n        blockSize\r\n      );\r\n      ctx.font = fontSize + \"px Roboto Mono\";\r\n      ctx.fillText(\r\n        text,\r\n        startX + blockSize + blockSpacing,\r\n        startY + (fontSize + lineSpacing) * k + fontSize / 2\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.paintFrame();\r\n    this.paintLegend();\r\n  }\r\n\r\n  render() {\r\n    let frame = this.props.frame;\r\n    if (this.props.canvasRef.current) {\r\n      this.paintFrame();\r\n      this.paintLegend();\r\n    }\r\n    return (\r\n      <div>\r\n        <canvas\r\n          width={this.props.width}\r\n          height={this.props.height}\r\n          ref={this.props.canvasRef}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Controls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let startingValues = this.startingArrayToCustomValues(\r\n      this.props.startingArray\r\n    );\r\n    this.state = {\r\n      speedModifier: 0,\r\n      customValues: startingValues,\r\n    };\r\n    this.handleSpeedSliderChange = this.handleSpeedSliderChange.bind(this);\r\n    this.handleCustomValuesChange = this.handleCustomValuesChange.bind(this);\r\n  }\r\n\r\n  handleSpeedSliderChange(event) {\r\n    let speedModifier = event.target.value;\r\n    this.props.changeAnimationSpeed(\r\n      Math.pow(4, -(speedModifier / 10)) * this.props.baseAnimationSpeed\r\n    );\r\n    this.setState({ speedModifier: speedModifier });\r\n  }\r\n  pauseAndChangeFrame(frameIndex) {\r\n    this.props.pause(true);\r\n    this.props.changeFrame(frameIndex);\r\n  }\r\n\r\n  startingArrayToCustomValues(arr) {\r\n    let customValues = \"\";\r\n    for (let k = 0; k < arr.length; k++) {\r\n      customValues += arr[k][0] + \", \";\r\n    }\r\n    if (customValues) {\r\n      customValues = customValues.substring(0, customValues.length - 2);\r\n    }\r\n    return customValues;\r\n  }\r\n\r\n  handleCustomValuesChange(event) {\r\n    let customValues = event.target.value;\r\n    this.setState({ customValues: customValues });\r\n  }\r\n\r\n  randomizeArray(array) {\r\n    let randomizedArray = array.slice();\r\n    for (let k = 0; k < randomizedArray.length; k++) {\r\n      let randInd = Math.floor(\r\n        Math.random() * (randomizedArray.length - k) + k\r\n      );\r\n      [randomizedArray[k], randomizedArray[randInd]] = [\r\n        randomizedArray[randInd],\r\n        randomizedArray[k],\r\n      ];\r\n    }\r\n    return randomizedArray;\r\n  }\r\n\r\n  render() {\r\n    let frameIndex = (this.props.frameIndex + 1).toString();\r\n    let maxFrameIndex = (this.props.maxFrameIndex + 1).toString();\r\n    frameIndex = frameIndex.padStart(maxFrameIndex.length, \" \");\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <div className=\"frame-controls\">\r\n              <div>\r\n                <span className=\"frame-slider-label\">\r\n                  {\"Frame: \" + frameIndex + \"/\" + maxFrameIndex}\r\n                </span>\r\n              </div>\r\n              <input\r\n                className=\"frame-slider\"\r\n                type=\"range\"\r\n                min={0}\r\n                max={this.props.maxFrameIndex}\r\n                value={this.props.frameIndex}\r\n                onChange={(event) =>\r\n                  this.pauseAndChangeFrame(event.target.value)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"playback-bar\">\r\n            <button\r\n              className=\"btn btn-outline-dark\"\r\n              onClick={() => {\r\n                let randomizedArray = this.randomizeArray(\r\n                  this.props.startingArray\r\n                );\r\n                this.props.changeStartingArray(randomizedArray);\r\n                this.setState({\r\n                  customValues: this.startingArrayToCustomValues(\r\n                    randomizedArray\r\n                  ),\r\n                });\r\n              }}\r\n            >\r\n              Randomize Order\r\n            </button>\r\n            <div className=\"step-controls\">\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) => this.pauseAndChangeFrame(0)}\r\n              >\r\n                <FastRewind />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.frameIndex - 1)\r\n                }\r\n              >\r\n                <SkipPrevious />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) => this.props.pause(!this.props.isPaused)}\r\n              >\r\n                {this.props.isPaused ? <PlayArrow /> : <Pause />}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.frameIndex + 1)\r\n                }\r\n              >\r\n                <SkipNext />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                onClick={(event) =>\r\n                  this.pauseAndChangeFrame(this.props.maxFrameIndex)\r\n                }\r\n              >\r\n                <FastForward />\r\n              </button>\r\n            </div>\r\n            <form>\r\n              <label className=\"speed\">\r\n                <span className=\"speed-label\">Speed:</span>\r\n                <input\r\n                  className=\"speed-slider\"\r\n                  type=\"range\"\r\n                  min={-10}\r\n                  max={10}\r\n                  value={this.state.speedModifier}\r\n                  onChange={this.handleSpeedSliderChange}\r\n                />\r\n              </label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <ValueCustomizer\r\n          customValues={this.state.customValues}\r\n          handleCustomValuesChange={this.handleCustomValuesChange}\r\n          changeStartingArray={this.props.changeStartingArray}\r\n          maxVal={this.props.maxVal}\r\n          minVal={this.props.minVal}\r\n          maxLength={this.props.maxLength}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ValueCustomizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCustomValuesSubmission = this.handleCustomValuesSubmission.bind(\r\n      this\r\n    );\r\n\r\n    this.state = {\r\n      validCustomValueSubmission: true,\r\n    };\r\n  }\r\n\r\n  customValuesToStartingArray(customValues) {\r\n    if (!customValues) {\r\n      return [];\r\n    }\r\n    const regex = /[0-9]+/g;\r\n    return customValues\r\n      .match(regex)\r\n      .map((value) => [parseInt(value), utils.color5]);\r\n  }\r\n\r\n  validateCustomValues(customValues) {\r\n    let regex = /^(\\s*[0-9]+\\s*,)*(\\s*[0-9]+\\s*)?$/g;\r\n    if (customValues.match(regex) == null) {\r\n      return false;\r\n    }\r\n    regex = /[0-9]+/g;\r\n    let values = customValues.match(regex).map((value) => parseInt(value));\r\n    if (\r\n      Math.max(...values) > 100 ||\r\n      Math.min(...values) < 0 ||\r\n      values.length >= this.props.maxLength\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleCustomValuesSubmission(event) {\r\n    let customValues = this.props.customValues;\r\n    event.preventDefault();\r\n    if (this.validateCustomValues(customValues)) {\r\n      this.props.changeStartingArray(\r\n        this.customValuesToStartingArray(customValues)\r\n      );\r\n      this.setState({ validCustomValueSubmission: true });\r\n    } else {\r\n      this.setState({ validCustomValueSubmission: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let validCriteriaMessage = (\r\n      <span\r\n        className={\r\n          this.state.validCustomValueSubmission\r\n            ? \"\"\r\n            : \"invalid-custom-value-submission\"\r\n        }\r\n      >\r\n        {\"Custom values must be integers greater than or equal to \" +\r\n          this.props.minVal +\r\n          \" and less than \" +\r\n          this.props.maxVal +\r\n          \".\"}\r\n        <br />\r\n        {\"Separate values using commas. Maximum length of \" +\r\n          this.props.maxLength +\r\n          \" values.\"}\r\n      </span>\r\n    );\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleCustomValuesSubmission}>\r\n          <label className=\"custom-value-submission-label\">\r\n            <textarea\r\n              rows=\"2\"\r\n              cols=\"100\"\r\n              onChange={this.props.handleCustomValuesChange}\r\n              value={this.props.customValues}\r\n            />\r\n            <input\r\n              className=\"btn btn-outline-dark\"\r\n              type=\"submit\"\r\n              value=\"Customize Values\"\r\n            />\r\n          </label>\r\n        </form>\r\n        <div>{validCriteriaMessage}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Visualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let startingArray = this.generateStartingArray(\r\n      this.props.arrayLength,\r\n      this.props.minimum,\r\n      this.props.maximum\r\n    );\r\n    let defaultAlgorithmName, defaultAlgorithmRunner;\r\n    [\r\n      defaultAlgorithmName,\r\n      defaultAlgorithmRunner,\r\n    ] = this.props.defaultAlgorithm;\r\n    let frames, legend, description;\r\n    [frames, legend, description] = defaultAlgorithmRunner(startingArray);\r\n    this.state = {\r\n      startingArray: startingArray,\r\n      isPaused: true,\r\n      frames: frames,\r\n      legend: legend,\r\n      frameIndex: 0,\r\n      animationSpeed: this.props.baseAnimationSpeed,\r\n      currentAlgorithm: this.props.defaultAlgorithm,\r\n      description: description,\r\n    };\r\n    this.canvasRef = React.createRef();\r\n    this.animationInterval = null;\r\n    this.runAlgorithm = this.runAlgorithm.bind(this);\r\n    this.pause = this.pause.bind(this);\r\n    this.changeFrame = this.changeFrame.bind(this);\r\n    this.changeAnimationSpeed = this.changeAnimationSpeed.bind(this);\r\n    this.changeAlgorithm = this.changeAlgorithm.bind(this);\r\n    this.changeStartingArray = this.changeStartingArray.bind(this);\r\n  }\r\n  generateStartingArray(arrayLength, minimum, maximum) {\r\n    let startingArray = [];\r\n    for (let k = 0; k < arrayLength; k++) {\r\n      let value = Math.floor(Math.random() * (maximum + 1)) + minimum;\r\n      startingArray.push([value, utils.color5]);\r\n    }\r\n    return startingArray;\r\n  }\r\n\r\n  runAlgorithm() {\r\n    this.setState((state) => {\r\n      let algorithmName, algorithmRunner;\r\n      [algorithmName, algorithmRunner] = state.currentAlgorithm;\r\n      let frames, legend, description;\r\n      [frames, legend, description] = algorithmRunner(state.startingArray);\r\n      clearInterval(this.animationInterval);\r\n      return {\r\n        legend: legend,\r\n        frames: frames,\r\n        description: description,\r\n        frameIndex: 0,\r\n        isPaused: true,\r\n      };\r\n    });\r\n  }\r\n\r\n  changeAlgorithm(currentAlgorithm) {\r\n    this.setState({ currentAlgorithm: currentAlgorithm });\r\n  }\r\n\r\n  pause(shouldPause) {\r\n    let isPaused = this.state.isPaused;\r\n    if (shouldPause == isPaused) {\r\n      return;\r\n    }\r\n    clearInterval(this.animationInterval);\r\n    if (!shouldPause) {\r\n      this.animationInterval = setInterval(\r\n        () => this.changeFrame(this.state.frameIndex + 1),\r\n        this.state.animationSpeed\r\n      );\r\n    }\r\n    this.setState({ isPaused: shouldPause });\r\n  }\r\n\r\n  changeFrame(frameIndex) {\r\n    frameIndex = Math.max(\r\n      0,\r\n      Math.min(this.state.frames.length - 1, frameIndex)\r\n    );\r\n    this.setState({ frameIndex: frameIndex });\r\n  }\r\n\r\n  changeAnimationSpeed(speed) {\r\n    if (!this.state.isPaused) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = setInterval(\r\n        () => this.changeFrame(this.state.frameIndex + 1),\r\n        speed\r\n      );\r\n    }\r\n    this.setState({ animationSpeed: speed });\r\n  }\r\n\r\n  changeStartingArray(startingArray) {\r\n    this.setState({ startingArray: startingArray });\r\n    this.runAlgorithm();\r\n  }\r\n\r\n  render() {\r\n    let currentFrame = this.state.frames[this.state.frameIndex];\r\n    return (\r\n      <div>\r\n        <AlgorithmSelect\r\n          currentAlgorithm={this.state.currentAlgorithm}\r\n          algorithmOptions={this.props.algorithmOptions}\r\n          runAlgorithm={this.runAlgorithm}\r\n          changeAlgorithm={this.changeAlgorithm}\r\n        />\r\n        <Description description={this.state.description} />\r\n        <Display\r\n          canvasRef={this.canvasRef}\r\n          width={1200}\r\n          height={480}\r\n          frame={currentFrame}\r\n          legend={this.state.legend}\r\n          barWidth={10}\r\n          barSpacing={12}\r\n          yOffset={50}\r\n          fontSize={12}\r\n          magnitudeMultiplier={2}\r\n        />\r\n        <Controls\r\n          frame={this.state.frameIndex}\r\n          pause={this.pause}\r\n          isPaused={this.state.isPaused}\r\n          maxFrameIndex={this.state.frames.length - 1}\r\n          frameIndex={this.state.frameIndex}\r\n          changeFrame={this.changeFrame}\r\n          baseAnimationSpeed={this.props.baseAnimationSpeed}\r\n          changeAnimationSpeed={this.changeAnimationSpeed}\r\n          startingArray={this.state.startingArray}\r\n          changeStartingArray={this.changeStartingArray}\r\n          maxVal={this.props.maximum}\r\n          minVal={this.props.minimum}\r\n          maxLength={this.props.maxLength}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <span>\r\n        <b>Sort Visualizer</b>\r\n      </span>\r\n      <Visualizer\r\n        arrayLength={40}\r\n        minimum={0}\r\n        maximum={100}\r\n        maxLength={50}\r\n        baseAnimationSpeed={100}\r\n        algorithmOptions={algorithmOptions}\r\n        defaultAlgorithm={algorithmOptions[0]}\r\n      />\r\n      <br />\r\n      <br />\r\n      <div className=\"description-block\">\r\n        Use this visualizer to compare different sorts. Each \"frame\" of the\r\n        visualization corresponds to a single swap between two elements. Try\r\n        customizing the values!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runQuicksort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(originalArray)];\r\n    function quicksort(start, end) {\r\n        if (start >= end) {\r\n            return;\r\n        }\r\n        var midpoint = partition(start, end);\r\n        quicksort(start, midpoint - 1);\r\n        quicksort(midpoint + 1, end);\r\n    }\r\n\r\n    function partition(start, end) {\r\n        var pivot = end;\r\n        var pval, pr, pg, pb;\r\n        [pval, pr, pg, pb] = workingArray[pivot];\r\n        utils.colorRange(workingArray, start, end, utils.color4);\r\n        frames.push(utils.copyArray(workingArray));\r\n        utils.colorIndex(workingArray, pivot, utils.color2);\r\n        frames.push(utils.copyArray(workingArray));\r\n        var j = start;\r\n        for (var k = start; k < end; k++) {\r\n            var val, r, g, b;\r\n            [val, r, g, b] = workingArray[k];\r\n            if (val < pval) {\r\n                [workingArray[j], workingArray[k]] = [\r\n                    workingArray[k],\r\n                    workingArray[j],\r\n                ];\r\n                j += 1;\r\n            }\r\n            utils.colorRange(workingArray, start, j - 1, utils.color3);\r\n            utils.colorRange(workingArray, j, k, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));\r\n        }\r\n        [workingArray[j], workingArray[pivot]] = [\r\n            workingArray[pivot],\r\n            workingArray[j],\r\n        ];\r\n        frames.push(utils.copyArray(workingArray));\r\n        utils.colorRange(workingArray, start, end, utils.color5);\r\n        return j;\r\n    }\r\n    quicksort(0, workingArray.length - 1);\r\n    frames.push(workingArray);\r\n    var legend = [\r\n        [\"Quicksort Legend\", utils.color5],\r\n        [\"Remaining elements in partition\", utils.color4],\r\n        [\"Pivot\", utils.color2],\r\n        [\"Elements in partition less than pivot\", utils.color3],\r\n        [\"Elements in partition greater than or equal to pivot\", utils.color1],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Quicksort</b> is an efficient in-place sorting algorithm with an average\r\n            runtime of O(n log n). <br /><a href=\"https://en.wikipedia.org/wiki/Quicksort\">Learn about how Quicksort works on Wikipedia.</a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from '../utilities.js';\r\n\r\nexport function runMergesort(originalArray){\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    function mergesort(start, end){\r\n        if (start == end){\r\n            return workingArray[start]\r\n        } else {\r\n            var midpoint = Math.floor((start + end) / 2);\r\n            mergesort(start, midpoint);\r\n            mergesort(midpoint + 1, end);\r\n            utils.colorRange(workingArray, start, midpoint, utils.color1);\r\n            utils.colorRange(workingArray, midpoint + 1, end, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            var arr = [];\r\n            var k = start;\r\n            var j = midpoint + 1;\r\n            while (k <= midpoint && j <= end){\r\n                var kval, kr, kg, kb;\r\n                [kval, kr, kg, kb] = workingArray[k];\r\n                var jval, jr, jg, jb;\r\n                [jval, jr, jg, jb] = workingArray[j];\r\n                if(kval <= jval){\r\n                    arr.push(workingArray[k]);\r\n                    k += 1;                    \r\n                } else {\r\n                    arr.push(workingArray[j]); \r\n                    j += 1;                                       \r\n                }\r\n            }\r\n            while (k <= midpoint){\r\n                arr.push(workingArray[k]);\r\n                k += 1;\r\n            }\r\n            while (j <= end){\r\n                arr.push(workingArray[j]);\r\n                j += 1;\r\n            }\r\n            var j = 0;\r\n            for (var k = start; k <= end; k++){\r\n                workingArray[k] = arr[j];\r\n                utils.colorIndex(workingArray, k, utils.color2);\r\n                frames.push(utils.copyArray(workingArray));\r\n                j += 1;\r\n            }\r\n            utils.colorRange(workingArray, start, end, utils.color5);\r\n            frames.push(utils.copyArray(workingArray));\r\n        }\r\n    }\r\n    mergesort(0, workingArray.length - 1);\r\n    var description = (\r\n        <span>\r\n            <b>Mergesort</b> is an efficient stable sorting algorithm with a\r\n            runtime of O(n log n) and a memory requirement of O(n). \r\n            <br /><a href=\"https://en.wikipedia.org/wiki/Merge_sort\">Learn about how Mergesort works on Wikipedia.</a>\r\n        </span>\r\n    );    \r\n    var legend = [[\"Mergesort Legend\", utils.color5], [\"Left in-order partition\", utils.color1], [\"Right in-order partition\", utils.color3], [\"Merged in-order partition\", utils.color2]];\r\n    return [frames, legend, description];\r\n}","import * as utils from '../utilities.js';\r\n\r\nexport function runHeapsort(originalArray){\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(originalArray)];\r\n    var heap_size = 0;\r\n    for(var k = 0; k < originalArray.length; k++){\r\n        insertIntoHeap();\r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    for(var k = workingArray.length - 1; k >= 0; k--){\r\n        pop_from_heap();\r\n    }\r\n\r\n    function insertIntoHeap(){\r\n        var ind = heap_size;\r\n        utils.colorIndex(workingArray, ind, utils.color1);\r\n        frames.push(utils.copyArray(workingArray));            \r\n        utils.colorIndex(workingArray, ind, utils.color3);        \r\n        var ival, ir, ig, ib;\r\n        [ival, ir, ig, ib] = workingArray[ind];\r\n        var parent = Math.floor((ind - 1) / 2);\r\n        var pval, pr, pg, pb;\r\n        if(parent > -1){\r\n            [pval, pr, pg, pb] = workingArray[parent];\r\n        }\r\n        while(parent > 0 && ival > pval){\r\n            utils.colorIndex(workingArray, ind, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));            \r\n            utils.colorIndex(workingArray, ind, utils.color3);\r\n            [workingArray[ind], workingArray[parent]] = [workingArray[parent], workingArray[ind]];\r\n            ind = parent;\r\n            parent = Math.floor((ind - 1) / 2);\r\n            [pval, pr, pg, pb] = workingArray[parent];\r\n            [ival, ir, ig, ib] = workingArray[ind];\r\n        }\r\n        if (ival > pval){\r\n            [workingArray[ind], workingArray[parent]] = [workingArray[parent], workingArray[ind]];            \r\n        }\r\n        heap_size += 1;\r\n    }\r\n\r\n    function pop_from_heap(){\r\n        [workingArray[0], workingArray[heap_size - 1]] = [workingArray[heap_size - 1], workingArray[0]];\r\n        utils.colorIndex(workingArray, heap_size - 1, utils.color2);\r\n        utils.colorIndex(workingArray, 0, utils.color1);        \r\n        frames.push(utils.copyArray(workingArray));\r\n        heap_size -= 1;\r\n        var ind = 0;\r\n        var ival, ir, ig, ib;\r\n        [ival, ir, ig, ib] = workingArray[ind];\r\n        var child1 = ind * 2 + 1;\r\n        var c1val, c1r, c1g, c1b;\r\n        if (child1 < heap_size){\r\n            [c1val, c1r, c1g, c1b] = workingArray[child1];\r\n        }\r\n        var child2 = ind * 2 + 2;\r\n        var c2val, c2r, c2g, c2b;\r\n        if (child2 < heap_size){\r\n            [c2val, c2r, c2g, c2b] = workingArray[child2];\r\n        }\r\n        while(child1 < heap_size && child2 < heap_size  && (ival < c1val || ival < c2val)){\r\n            if (c1val > c2val){\r\n                [workingArray[child1], workingArray[ind]] = [workingArray[ind], workingArray[child1]];\r\n                ind = child1;\r\n            } else {\r\n                [workingArray[child2], workingArray[ind]] = [workingArray[ind], workingArray[child2]];                \r\n                ind = child2;\r\n            }\r\n            frames.push(utils.copyArray(workingArray)); \r\n            child1 = ind * 2 + 1;\r\n            if (child1 < heap_size){\r\n                [c1val, c1r, c1g, c1b] = workingArray[child1];\r\n            }            \r\n            child2 = ind * 2 + 2;\r\n            if (child2 < heap_size){\r\n                [c2val, c2r, c2g, c2b] = workingArray[child2];\r\n            }\r\n        }\r\n        if (child2 < heap_size && ival < c2val){\r\n            [workingArray[child2], workingArray[ind]] = [workingArray[ind], workingArray[child2]];                \r\n        } else if(child1 < heap_size && ival < c1val){\r\n            [workingArray[child1], workingArray[ind]] = [workingArray[ind], workingArray[child1]];            \r\n        }\r\n        utils.colorIndex(workingArray, ind, utils.color3);        \r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var description = (\r\n        <span>\r\n            <b>Heapsort</b> is an efficient in-place sorting algorithm with a\r\n            runtime of O(n log n). \r\n            <br /><a href=\"https://en.wikipedia.org/wiki/Heapsort\">Learn about how Heapsort works on Wikipedia.</a>\r\n        </span>\r\n    );        \r\n    var legend = [[\"Heapsort Legend\", utils.color5], [\"In-place max heap\", utils.color3], [\"Element being sifted\", utils.color1], [\"Sorted elements\", utils.color2]]\r\n    return [frames, legend, description];\r\n}","import * as utils from \"../utilities.js\";\r\n\r\nexport function runInsertionsort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    for (var k = 0; k < workingArray.length; k++) {\r\n        utils.colorIndex(workingArray, k, utils.color1);\r\n        var kval, kr, kg, kb;\r\n        [kval, kr, kg, jb] = workingArray[k];\r\n        var jval, jr, jg, jb;\r\n        for (var j = 0; j < k; j++) {\r\n            [jval, jr, jg, jb] = workingArray[j];\r\n            utils.colorRange(workingArray, 0, j, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            if (kval < jval) {\r\n                frames.pop();\r\n                utils.colorIndex(workingArray, j, utils.color2);\r\n                for (var m = k; m > j; m--) {\r\n                    [workingArray[m], workingArray[m - 1]] = [\r\n                        workingArray[m - 1],\r\n                        workingArray[m],\r\n                    ];\r\n                    frames.push(utils.copyArray(workingArray));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        utils.colorRange(workingArray, 0, k, utils.color2);\r\n        frames.push(utils.copyArray(workingArray));\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Insertion Sort Legend\", utils.color5],\r\n        [\"Target element\", utils.color1],\r\n        [\"Items less than or equal to target element\", utils.color3],\r\n        [\"Sorted elements\", utils.color2],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Insertion sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Insertion_sort\">\r\n                Learn about how Insertion sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runSelectionsort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    for (var k = 0; k < workingArray.length; k++) {\r\n        var min = k;\r\n        var minval, mr, mg, mb;\r\n        [minval, mr, mg, mb] = workingArray[min];\r\n        utils.colorIndex(workingArray, min, utils.color1);\r\n        for (var j = k + 1; j < workingArray.length; j++) {\r\n            var jval, jr, jg, jb;\r\n            [jval, jr, jg, jb] = workingArray[j];\r\n            if (jval < minval) {\r\n                utils.colorIndex(workingArray, min, utils.color5);\r\n                min = j;\r\n                [minval, mr, mg, mb] = workingArray[min];\r\n            }\r\n            utils.colorIndex(workingArray, j, utils.color3);\r\n            utils.colorIndex(workingArray, min, utils.color1);\r\n            frames.push(utils.copyArray(workingArray));\r\n            utils.colorIndex(workingArray, j, utils.color5);\r\n            utils.colorIndex(workingArray, min, utils.color1);\r\n        }\r\n        [workingArray[min], workingArray[k]] = [\r\n            workingArray[k],\r\n            workingArray[min],\r\n        ];\r\n        utils.colorIndex(workingArray, k, utils.color2);\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Selection Sort Legend\", utils.color5],\r\n        [\"Current element\", utils.color3],\r\n        [\"Current minimum among unsorted elements\", utils.color1],\r\n        [\"Sorted elements\", utils.color2],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Selection sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Selection_sort\">\r\n                Learn about how Selection sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","import * as utils from \"../utilities.js\";\r\n\r\nexport function runBubblesort(originalArray) {\r\n    var workingArray = utils.copyArray(originalArray);\r\n    var frames = [utils.copyArray(workingArray)];\r\n    var run = true;\r\n    while (run) {\r\n        var swaps = 0;\r\n        for (var k = 1; k < workingArray.length; k++) {\r\n            var kval, kr, kg, kb;\r\n            [kval, kr, kg, kb] = workingArray[k];\r\n            var pval, pr, pg, pb;\r\n            [pval, pr, pg, pb] = workingArray[k - 1];\r\n            utils.colorIndex(workingArray, k, utils.color1);\r\n            utils.colorIndex(workingArray, k - 1, utils.color3);\r\n            frames.push(utils.copyArray(workingArray));\r\n            if (kval < pval) {\r\n                [workingArray[k], workingArray[k - 1]] = [\r\n                    workingArray[k - 1],\r\n                    workingArray[k],\r\n                ];\r\n                utils.colorIndex(workingArray, k, utils.color3);\r\n                utils.colorIndex(workingArray, k - 1, utils.color1);\r\n                frames.push(utils.copyArray(workingArray));\r\n                swaps += 1;\r\n            }\r\n            utils.colorIndex(workingArray, k, utils.color5);\r\n            utils.colorIndex(workingArray, k - 1, utils.color5);\r\n        }\r\n        if (swaps == 0) {\r\n            run = false;\r\n        }\r\n    }\r\n    utils.colorRange(workingArray, 0, workingArray.length - 1, utils.color5);\r\n    frames.push(utils.copyArray(workingArray));\r\n    var legend = [\r\n        [\"Bubblesort Legend\", utils.color5],\r\n        [\"Left element\", utils.color3],\r\n        [\"Right element\", utils.color1],\r\n    ];\r\n    var description = (\r\n        <span>\r\n            <b>Bubble sort</b> is an inefficient sorting algorithm with an\r\n            runtime of O(n^2). <br />\r\n            <a href=\"https://en.wikipedia.org/wiki/Bubble_sort\">\r\n                Learn about how Bubble sort works on Wikipedia.\r\n            </a>\r\n        </span>\r\n    );\r\n    return [frames, legend, description];\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport WebFont from \"webfontloader\";\r\n\r\nlet init = () =>\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  \r\nWebFont.load({\r\n  google: { families: [\"Roboto Mono\"] },\r\n  active: init,\r\n});\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}